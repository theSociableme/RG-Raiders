- table:
    schema: public
    name: AccountType
  is_enum: true
- table:
    schema: public
    name: ColorAspect
  array_relationships:
  - name: raiders
    using:
      foreign_key_constraint_on:
        column: color_mask
        table:
          schema: public
          name: raider
  select_permissions:
  - role: raider
    permission:
      columns:
      - mask
      - name
      - description
      filter: {}
  - role: public
    permission:
      columns:
      - mask
      - description
      - name
      filter: {}
- table:
    schema: public
    name: GuildPosition
  is_enum: true
- table:
    schema: public
    name: GuildStatus
  is_enum: true
- table:
    schema: public
    name: GuildType
  is_enum: true
  array_relationships:
  - name: Guilds
    using:
      foreign_key_constraint_on:
        column: type
        table:
          schema: public
          name: guild
  select_permissions:
  - role: raider
    permission:
      columns:
      - name
      filter: {}
  - role: public
    permission:
      columns:
      - name
      filter: {}
- table:
    schema: public
    name: RaiderRank
  is_enum: true
- table:
    schema: public
    name: QuestCompletionStatus
  is_enum: true
  array_relationships:
  - name: quest_completions
    using:
      foreign_key_constraint_on:
        column: status
        table:
          schema: public
          name: quest_completion
- table:
    schema: public
    name: QuestRepetition
  is_enum: true
  array_relationships:
  - name: quests
    using:
      foreign_key_constraint_on:
        column: repetition
        table:
          schema: public
          name: quest
- table:
    schema: public
    name: QuestStatus
  is_enum: true
  array_relationships:
  - name: quests
    using:
      foreign_key_constraint_on:
        column: status
        table:
          schema: public
          name: quest
- table:
    schema: public
    name: SkillCategory
  is_enum: true
- table:
    schema: public
    name: guild
  object_relationships:
  - name: GuildType
    using:
      foreign_key_constraint_on: type
  array_relationships:
  - name: guild_accounts
    using:
      foreign_key_constraint_on:
        column: guild_id
        table:
          schema: public
          name: guild_account
  - name: guild_raiders
    using:
      foreign_key_constraint_on:
        column: guild_id
        table:
          schema: public
          name: guild_raider
  - name: quests
    using:
      foreign_key_constraint_on:
        column: guild_id
        table:
          schema: public
          name: quest
  select_permissions:
  - role: raider
    permission:
      columns:
      - description
      - discord_id
      - discord_invite_url
      - github_url
      - guildname
      - id
      - join_button_url
      - logo
      - moloch_address
      - name
      - position
      - status
      - twitter_url
      - type
      - website_url
      filter: {}
  - role: public
    permission:
      columns:
      - description
      - discord_id
      - discord_invite_url
      - github_url
      - guildname
      - id
      - join_button_url
      - logo
      - moloch_address
      - name
      - position
      - status
      - twitter_url
      - type
      - website_url
      filter: {}
- table:
    schema: public
    name: guild_account
  object_relationships:
  - name: AccountType
    using:
      foreign_key_constraint_on: type
  - name: Guild
    using:
      foreign_key_constraint_on: guild_id
- table:
    schema: public
    name: guild_raider
  object_relationships:
  - name: Guild
    using:
      foreign_key_constraint_on: guild_id
  - name: Raider
    using:
      foreign_key_constraint_on: raider_id
  select_permissions:
  - role: raider
    permission:
      columns: []
      filter: {}
  - role: public
    permission:
      columns: []
      filter: {}
- table:
    schema: public
    name: me
  object_relationships:
  - name: raider
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: raider
        column_mapping:
          id: id
  select_permissions:
  - role: raider
    permission:
      columns:
      - id
      - username
      - ethereum_address
      filter:
        id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: raider
  object_relationships:
  - name: ColorAspect
    using:
      foreign_key_constraint_on: color_mask
  - name: raiderType
    using:
      foreign_key_constraint_on: raider_type_id
  - name: profile_cache
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: profile_cache
        column_mapping:
          id: raider_id
  array_relationships:
  - name: Accounts
    using:
      foreign_key_constraint_on:
        column: raider_id
        table:
          schema: public
          name: raider_account
  - name: guilds
    using:
      foreign_key_constraint_on:
        column: raider_id
        table:
          schema: public
          name: guild_raider
  - name: Raider_Skills
    using:
      foreign_key_constraint_on:
        column: raider_id
        table:
          schema: public
          name: raider_skill
  - name: quest_completions
    using:
      foreign_key_constraint_on:
        column: completed_by_raider_id
        table:
          schema: public
          name: quest_completion
  - name: quests
    using:
      foreign_key_constraint_on:
        column: created_by_raider_id
        table:
          schema: public
          name: quest
  remote_relationships:
  - definition:
      remote_field:
        getBoxProfile:
          arguments:
            address: $ethereum_address
      hasura_fields:
      - ethereum_address
      remote_schema: backend
    name: box_profile
  - definition:
      remote_field:
        getDaoHausMemberships:
          arguments:
            memberAddress: $ethereum_address
      hasura_fields:
      - ethereum_address
      remote_schema: backend
    name: daohausMemberships
  - definition:
      remote_field:
        getBrightIdStatus:
          arguments:
            contextId: $id
      hasura_fields:
      - id
      remote_schema: backend
    name: brightid_status
  - definition:
      remote_field:
        getTokenBalances:
          arguments:
            address: $ethereum_address
      hasura_fields:
      - ethereum_address
      remote_schema: backend
    name: token_balances
  select_permissions:
  - role: raider
    permission:
      columns:
      - availability_hours
      - color_mask
      - ethereum_address
      - id
      - raider_type_id
      - rank
      - season_xp
      - timezone
      - total_xp
      - username
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - availability_hours
      - color_mask
      - ethereum_address
      - id
      - rank
      - season_xp
      - timezone
      - total_xp
      - username
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: raider
    permission:
      columns:
      - availability_hours
      - color_mask
      - raider_type_id
      - timezone
      - username
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: {}
      set:
        id: x-hasura-User-Id
  event_triggers:
  - name: cacheIDXProfile
    definition:
      enable_manual: true
      insert:
        columns: '*'
      update:
        columns:
        - ethereum_address
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook: '{{TRIGGERS_ENDPOINT}}'
  - name: raider_rank_updated
    definition:
      enable_manual: false
      update:
        columns:
        - rank
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: TRIGGERS_ENDPOINT
- table:
    schema: public
    name: raider_account
  object_relationships:
  - name: Raider
    using:
      foreign_key_constraint_on: raider_id
  select_permissions:
  - role: raider
    permission:
      columns:
      - raider_id
      - identifier
      - type
      filter: {}
  - role: public
    permission:
      columns:
      - raider_id
      - identifier
      - type
      filter: {}
- table:
    schema: public
    name: raider_skill
  object_relationships:
  - name: Skill
    using:
      foreign_key_constraint_on: skill_id
  insert_permissions:
  - role: raider
    permission:
      check:
        raider_id:
          _eq: X-Hasura-User-Id
      set:
        raider_id: x-hasura-User-Id
      columns:
      - skill_id
      backend_only: false
  select_permissions:
  - role: raider
    permission:
      columns:
      - raider_id
      - skill_id
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - raider_id
      - skill_id
      filter: {}
      allow_aggregations: true
  delete_permissions:
  - role: raider
    permission:
      filter:
        raider_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: raider_type
  select_permissions:
  - role: raider
    permission:
      columns:
      - description
      - id
      - imageUrl
      - title
      filter: {}
  - role: public
    permission:
      columns:
      - id
      - description
      - imageUrl
      - title
      filter: {}
- table:
    schema: public
    name: profile_cache
  configuration:
    custom_root_fields: {}
    custom_column_names:
      background_image_url: backgroundImageURL
      image_url: imageURL
      raider_id: raiderId
  object_relationships:
  - name: raider
    using:
      foreign_key_constraint_on: raider_id
  select_permissions:
  - role: raider
    permission:
      columns:
      - name
      - description
      - location
      - emoji
      - image_url
      - background_image_url
      - website
      - gender
      - id
      - raider_id
      filter: {}
  - role: public
    permission:
      columns:
      - background_image_url
      - description
      - emoji
      - gender
      - image_url
      - location
      - name
      - website
      - id
      - raider_id
      filter: {}
  update_permissions:
  - role: raider
    permission:
      columns:
      - background_image_url
      - description
      - emoji
      - gender
      - image_url
      - location
      - name
      - website
      filter:
        raider_id:
          _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: quest
  object_relationships:
  - name: guild
    using:
      foreign_key_constraint_on: guild_id
  - name: raider
    using:
      foreign_key_constraint_on: created_by_raider_id
  - name: QuestRepetition
    using:
      foreign_key_constraint_on: repetition
  - name: QuestStatus
    using:
      foreign_key_constraint_on: status
  array_relationships:
  - name: quest_completions
    using:
      foreign_key_constraint_on:
        column: quest_id
        table:
          schema: public
          name: quest_completion
  - name: quest_skills
    using:
      foreign_key_constraint_on:
        column: quest_id
        table:
          schema: public
          name: quest_skill
  select_permissions:
  - role: raider
    permission:
      columns:
      - created_at
      - cooldown
      - description
      - external_link
      - repetition
      - status
      - title
      - created_by_raider_id
      - guild_id
      - id
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - id
      - created_at
      - guild_id
      - created_by_raider_id
      - title
      - description
      - external_link
      - cooldown
      - status
      - repetition
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: raider
    permission:
      columns:
      - cooldown
      - description
      - external_link
      - guild_id
      - repetition
      - status
      - title
      filter:
        _and:
        - created_by_raider_id:
            _eq: X-Hasura-User-Id
        - status:
            _eq: OPEN
      check:
        _or:
        - repetition:
            _ne: RECURRING
        - _and:
          - repetition:
              _eq: RECURRING
          - cooldown:
              _is_null: false
- table:
    schema: public
    name: quest_completion
  object_relationships:
  - name: raider
    using:
      foreign_key_constraint_on: completed_by_raider_id
  - name: quest
    using:
      foreign_key_constraint_on: quest_id
  - name: QuestCompletionStatus
    using:
      foreign_key_constraint_on: status
  select_permissions:
  - role: raider
    permission:
      columns:
      - completed_by_raider_id
      - id
      - quest_id
      - status
      - submission_link
      - submission_text
      - submitted_at
      filter: {}
  - role: public
    permission:
      columns:
      - completed_by_raider_id
      - id
      - quest_id
      - status
      - submission_link
      - submission_text
      - submitted_at
      filter: {}
  update_permissions:
  - role: raider
    permission:
      columns:
      - submission_link
      - submission_text
      filter:
        _and:
        - status:
            _eq: PENDING
        - completed_by_raider_id:
            _eq: X-Hasura-User-Id
      check: null
- table:
    schema: public
    name: quest_skill
  object_relationships:
  - name: quest
    using:
      foreign_key_constraint_on: quest_id
  - name: skill
    using:
      foreign_key_constraint_on: skill_id
  insert_permissions:
  - role: raider
    permission:
      check:
        quest:
          created_by_raider_id:
            _eq: X-Hasura-User-Id
      columns:
      - quest_id
      - skill_id
      backend_only: false
  select_permissions:
  - role: raider
    permission:
      columns:
      - quest_id
      - skill_id
      filter: {}
  - role: public
    permission:
      columns:
      - quest_id
      - skill_id
      filter: {}
  delete_permissions:
  - role: raider
    permission:
      filter:
        quest:
          created_by_raider_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: skill
  array_relationships:
  - name: Raider_Skills
    using:
      foreign_key_constraint_on:
        column: skill_id
        table:
          schema: public
          name: raider_skill
  - name: quest_skills
    using:
      foreign_key_constraint_on:
        column: skill_id
        table:
          schema: public
          name: quest_skill
  insert_permissions:
  - role: raider
    permission:
      check: {}
      columns:
      - name
      backend_only: false
  select_permissions:
  - role: raider
    permission:
      columns:
      - category
      - id
      - name
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - category
      - name
      - id
      filter: {}
      allow_aggregations: true
