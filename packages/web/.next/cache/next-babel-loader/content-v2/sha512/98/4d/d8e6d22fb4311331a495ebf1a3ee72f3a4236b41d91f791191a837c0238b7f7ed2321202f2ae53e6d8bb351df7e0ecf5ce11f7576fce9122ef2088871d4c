{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupHeader.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Flex, Grid, Image, ResponsiveText } from '@raidguild/ds';\nimport BackImage from 'assets/Back.svg';\nimport LogoImage from 'assets/logo.png';\nimport SkipImage from 'assets/Skip.svg';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport React from 'react';\nexport const SetupHeader = () => {\n  const {\n    stepIndex,\n    onNextPress,\n    onBackPress,\n    options\n  } = useSetupFlow();\n  const {\n    sectionIndex\n  } = options.steps[stepIndex];\n  return __jsx(Grid, {\n    templateColumns: \"0.5fr 1fr 1fr 1fr 0.5fr\",\n    gap: \"1rem\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(FlexContainer, {\n    justify: \"flex-end\",\n    onClick: onBackPress,\n    cursor: \"pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    src: BackImage,\n    h: \"1rem\",\n    alt: \"Back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), options.sections.map((option, id) => __jsx(SectionProgress, {\n    key: option.label,\n    title: option.title,\n    isActive: sectionIndex === id,\n    isDone: sectionIndex > id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), __jsx(FlexContainer, {\n    justify: \"flex-end\",\n    onClick: onNextPress,\n    cursor: \"pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    src: SkipImage,\n    h: \"1rem\",\n    alt: \"Forward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\nexport const SectionProgress = ({\n  title,\n  isDone,\n  isActive\n}) => {\n  const {\n    options,\n    stepIndex\n  } = useSetupFlow();\n  const progress = isDone ? 100 : options.progressWithinSection(stepIndex);\n  return __jsx(FlexContainer, {\n    pos: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(ResponsiveText, {\n    w: \"100%\",\n    textTransform: \"uppercase\",\n    fontSize: \"xs\",\n    fontFamily: \"mono\",\n    fontWeight: \"bold\",\n    color: \"offwhite\",\n    opacity: isActive ? 1 : 0.4,\n    mb: 4,\n    content: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(Flex, {\n    bgColor: \"blue20\",\n    w: \"100%\",\n    h: \"0.5rem\",\n    borderRadius: \"0.25rem\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, (isActive || isDone) && __jsx(Box, {\n    bgColor: \"purple.400\",\n    w: `${progress}%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), isActive && __jsx(Image, {\n    mt: 4,\n    pos: \"absolute\",\n    w: \"1.5rem\",\n    top: \"100%\",\n    src: LogoImage,\n    left: `${progress}%`,\n    transform: \"translateX(-50%)\",\n    alt: \"Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupHeader.tsx"],"names":["Box","Flex","Grid","Image","ResponsiveText","BackImage","LogoImage","SkipImage","FlexContainer","useSetupFlow","React","SetupHeader","stepIndex","onNextPress","onBackPress","options","sectionIndex","steps","sections","map","option","id","label","title","SectionProgress","isDone","isActive","progress","progressWithinSection"],"mappings":"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","sourcesContent":["import { Box, Flex, Grid, Image, ResponsiveText } from '@raidguild/ds';\nimport BackImage from 'assets/Back.svg';\nimport LogoImage from 'assets/logo.png';\nimport SkipImage from 'assets/Skip.svg';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport React from 'react';\n\nexport const SetupHeader: React.FC = () => {\n  const { stepIndex, onNextPress, onBackPress, options } = useSetupFlow();\n\n  const { sectionIndex } = options.steps[stepIndex];\n\n  return (\n    <Grid templateColumns=\"0.5fr 1fr 1fr 1fr 0.5fr\" gap=\"1rem\" w=\"100%\">\n      <FlexContainer justify=\"flex-end\" onClick={onBackPress} cursor=\"pointer\">\n        <Image src={BackImage} h=\"1rem\" alt=\"Back\" />\n      </FlexContainer>\n      {options.sections.map((option, id) => (\n        <SectionProgress\n          key={option.label}\n          title={option.title}\n          isActive={sectionIndex === id}\n          isDone={sectionIndex > id}\n        />\n      ))}\n      <FlexContainer justify=\"flex-end\" onClick={onNextPress} cursor=\"pointer\">\n        <Image src={SkipImage} h=\"1rem\" alt=\"Forward\" />\n      </FlexContainer>\n    </Grid>\n  );\n};\n\ninterface StepProps {\n  title: { [any: string]: string | undefined };\n  isDone: boolean;\n  isActive: boolean;\n}\n\nexport const SectionProgress: React.FC<StepProps> = ({\n  title,\n  isDone,\n  isActive,\n}) => {\n  const { options, stepIndex } = useSetupFlow();\n\n  const progress = isDone ? 100 : options.progressWithinSection(stepIndex);\n  return (\n    <FlexContainer pos=\"relative\">\n      <ResponsiveText\n        w=\"100%\"\n        textTransform=\"uppercase\"\n        fontSize=\"xs\"\n        fontFamily=\"mono\"\n        fontWeight=\"bold\"\n        color=\"offwhite\"\n        opacity={isActive ? 1 : 0.4}\n        mb={4}\n        content={title}\n      />\n      <Flex\n        bgColor=\"blue20\"\n        w=\"100%\"\n        h=\"0.5rem\"\n        borderRadius=\"0.25rem\"\n        overflow=\"hidden\"\n      >\n        {(isActive || isDone) && (\n          <Box bgColor=\"purple.400\" w={`${progress}%`} />\n        )}\n      </Flex>\n      {isActive && (\n        <Image\n          mt={4}\n          pos=\"absolute\"\n          w=\"1.5rem\"\n          top=\"100%\"\n          src={LogoImage}\n          left={`${progress}%`}\n          transform=\"translateX(-50%)\"\n          alt=\"Avatar\"\n        />\n      )}\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}