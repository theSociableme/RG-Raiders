{"ast":null,"code":"import _extends from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/Filter/DesktopFilters.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MetaFilterSelectSearch, MetaTheme, selectStyles, TimezoneOptions, Wrap, WrapItem } from '@raidguild/ds';\nimport { SkillColors } from 'graphql/types';\nimport { useIsSticky } from 'lib/hooks/useIsSticky';\nimport React, { useRef } from 'react';\n\nvar styles = _objectSpread(_objectSpread({}, selectStyles), {}, {\n  multiValue: function multiValue(s, _ref) {\n    var data = _ref.data;\n    return _objectSpread(_objectSpread({}, s), {}, {\n      background: SkillColors[data.category],\n      color: MetaTheme.colors.white\n    });\n  },\n  multiValueLabel: function multiValueLabel(s, _ref2) {\n    var data = _ref2.data;\n    return _objectSpread(_objectSpread({}, s), {}, {\n      background: SkillColors[data.category],\n      color: MetaTheme.colors.white\n    });\n  },\n  groupHeading: function groupHeading(s, _ref3) {\n    var children = _ref3.children;\n    return _objectSpread(_objectSpread(_objectSpread({}, s), selectStyles.groupHeading && selectStyles.groupHeading(s, {\n      children: children\n    })), {}, {\n      background: SkillColors[children],\n      borderTop: \"1px solid \".concat(MetaTheme.colors.borderPurple),\n      margin: 0\n    });\n  },\n  option: function option(s, _ref4) {\n    var isSelected = _ref4.isSelected;\n    return _objectSpread(_objectSpread({}, s), {}, {\n      backgroundColor: 'transparent',\n      fontWeight: isSelected ? 'bold' : 'normal',\n      ':hover': {\n        backgroundColor: 'transparent',\n        color: MetaTheme.colors.white\n      },\n      ':focus': {\n        boxShadow: '0 0 0 3px rgba(66, 153, 225, 0.6)'\n      }\n    });\n  },\n  menu: function menu() {\n    return {};\n  },\n  control: function control(s) {\n    return _objectSpread(_objectSpread({}, s), {}, {\n      background: MetaTheme.colors.dark,\n      border: 'none',\n      ':hover': {}\n    });\n  },\n  noOptionsMessage: function noOptionsMessage(s) {\n    return _objectSpread(_objectSpread({}, s), {}, {\n      borderTop: \"1px solid \".concat(MetaTheme.colors.borderPurple)\n    });\n  }\n});\n\nexport var DesktopFilters = function DesktopFilters(_ref5) {\n  _s();\n\n  var aggregates = _ref5.aggregates,\n      skills = _ref5.skills,\n      setSkills = _ref5.setSkills,\n      playerTypes = _ref5.playerTypes,\n      setPlayerTypes = _ref5.setPlayerTypes,\n      timezones = _ref5.timezones,\n      setTimezones = _ref5.setTimezones,\n      availability = _ref5.availability,\n      setAvailability = _ref5.setAvailability,\n      props = _objectWithoutProperties(_ref5, [\"aggregates\", \"skills\", \"setSkills\", \"playerTypes\", \"setPlayerTypes\", \"timezones\", \"setTimezones\", \"availability\", \"setAvailability\"]);\n\n  var filterRef = useRef(null);\n  var isSticky = useIsSticky(filterRef);\n  return __jsx(Wrap, _extends({\n    transition: \"all 0.25s\",\n    py: \"6\",\n    style: {\n      backdropFilter: 'blur(7px)'\n    },\n    ref: filterRef,\n    position: \"sticky\",\n    top: \"-1px\",\n    borderTop: \"1px solid transparent\",\n    zIndex: \"1\",\n    justifyContent: \"center\",\n    w: isSticky ? 'calc(100% + 6rem)' : '100%',\n    maxW: isSticky ? 'auto' : '79rem',\n    bg: isSticky ? 'purpleTag70' : 'whiteAlpha.200',\n    px: isSticky ? '4.5rem' : '1.5rem',\n    borderRadius: isSticky ? '0px' : '6px'\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }), __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(MetaFilterSelectSearch, {\n    title: \"Type Of Player\",\n    styles: styles,\n    value: playerTypes,\n    onChange: function onChange(value) {\n      setPlayerTypes(value);\n    },\n    options: aggregates.playerTypes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(MetaFilterSelectSearch, {\n    title: \"Skills\",\n    styles: styles,\n    value: skills,\n    onChange: function onChange(value) {\n      setSkills(value);\n    },\n    options: aggregates.skillChoices,\n    showSearch: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(MetaFilterSelectSearch, {\n    title: \"Availability\",\n    styles: styles,\n    value: availability ? [availability] : [],\n    onChange: function onChange(value) {\n      var values = value;\n      setAvailability(values[values.length - 1]);\n    },\n    options: [1, 5, 10, 20, 30, 40].map(function (value) {\n      return {\n        value: value.toString(),\n        label: \"> \".concat(value.toString(), \" h/week\")\n      };\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, __jsx(MetaFilterSelectSearch, {\n    title: \"Time Zone\",\n    styles: styles,\n    value: timezones,\n    onChange: function onChange(value) {\n      var values = value;\n      setTimezones(values.slice(-1));\n    },\n    options: TimezoneOptions,\n    showSearch: true,\n    isTimezone: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(DesktopFilters, \"S4bimjcBc0hZAtwQijpY2xdUClQ=\", false, function () {\n  return [useIsSticky];\n});\n\n_c = DesktopFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopFilters\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/Filter/DesktopFilters.tsx"],"names":["MetaFilterSelectSearch","MetaTheme","selectStyles","TimezoneOptions","Wrap","WrapItem","SkillColors","useIsSticky","React","useRef","styles","multiValue","s","data","background","category","color","colors","white","multiValueLabel","groupHeading","children","borderTop","borderPurple","margin","option","isSelected","backgroundColor","fontWeight","boxShadow","menu","control","dark","border","noOptionsMessage","DesktopFilters","aggregates","skills","setSkills","playerTypes","setPlayerTypes","timezones","setTimezones","availability","setAvailability","props","filterRef","isSticky","backdropFilter","value","skillChoices","values","length","map","toString","label","slice"],"mappings":"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","sourcesContent":["import {\n  MetaFilterSelectSearch,\n  MetaTheme,\n  selectStyles,\n  TimezoneOptions,\n  Wrap,\n  WrapItem,\n  WrapProps,\n} from '@raidguild/ds';\nimport { SkillCategory_Enum } from 'graphql/autogen/types';\nimport { SkillColors } from 'graphql/types';\nimport { PlayerAggregates } from 'lib/hooks/players';\nimport { useIsSticky } from 'lib/hooks/useIsSticky';\nimport React, { useRef } from 'react';\nimport { SkillOption } from 'utils/skillHelpers';\n\ntype ValueType = { value: string; label: string };\n\nconst styles: typeof selectStyles = {\n  ...selectStyles,\n  multiValue: (s, { data }) => ({\n    ...s,\n    background: SkillColors[data.category as SkillCategory_Enum],\n    color: MetaTheme.colors.white,\n  }),\n  multiValueLabel: (s, { data }) => ({\n    ...s,\n    background: SkillColors[data.category as SkillCategory_Enum],\n    color: MetaTheme.colors.white,\n  }),\n  groupHeading: (s, { children }) => ({\n    ...s,\n    ...(selectStyles.groupHeading &&\n      selectStyles.groupHeading(s, { children })),\n    background: SkillColors[children as SkillCategory_Enum],\n    borderTop: `1px solid ${MetaTheme.colors.borderPurple}`,\n    margin: 0,\n  }),\n  option: (s, { isSelected }) => ({\n    ...s,\n    backgroundColor: 'transparent',\n    fontWeight: isSelected ? 'bold' : 'normal',\n    ':hover': {\n      backgroundColor: 'transparent',\n      color: MetaTheme.colors.white,\n    },\n    ':focus': {\n      boxShadow: '0 0 0 3px rgba(66, 153, 225, 0.6)',\n    },\n  }),\n  menu: () => ({}),\n  control: (s) => ({\n    ...s,\n    background: MetaTheme.colors.dark,\n    border: 'none',\n    ':hover': {},\n  }),\n  noOptionsMessage: (s) => ({\n    ...s,\n    borderTop: `1px solid ${MetaTheme.colors.borderPurple}`,\n  }),\n};\n\ntype Props = {\n  aggregates: PlayerAggregates;\n  skills: SkillOption[];\n  setSkills: React.Dispatch<React.SetStateAction<SkillOption[]>>;\n  playerTypes: ValueType[];\n  setPlayerTypes: React.Dispatch<React.SetStateAction<ValueType[]>>;\n  timezones: ValueType[];\n  setTimezones: React.Dispatch<React.SetStateAction<ValueType[]>>;\n  availability: ValueType | null;\n  setAvailability: React.Dispatch<React.SetStateAction<ValueType | null>>;\n} & WrapProps;\n\nexport const DesktopFilters: React.FC<Props> = ({\n  aggregates,\n  skills,\n  setSkills,\n  playerTypes,\n  setPlayerTypes,\n  timezones,\n  setTimezones,\n  availability,\n  setAvailability,\n  ...props\n}) => {\n  const filterRef = useRef<HTMLDivElement>(null);\n  const isSticky = useIsSticky(filterRef);\n\n  return (\n    <Wrap\n      transition=\"all 0.25s\"\n      py=\"6\"\n      style={{ backdropFilter: 'blur(7px)' }}\n      ref={filterRef}\n      position=\"sticky\"\n      top=\"-1px\"\n      borderTop=\"1px solid transparent\"\n      zIndex=\"1\"\n      justifyContent=\"center\"\n      w={isSticky ? 'calc(100% + 6rem)' : '100%'}\n      maxW={isSticky ? 'auto' : '79rem'}\n      bg={isSticky ? 'purpleTag70' : 'whiteAlpha.200'}\n      px={isSticky ? '4.5rem' : '1.5rem'}\n      borderRadius={isSticky ? '0px' : '6px'}\n      {...props}\n    >\n      <WrapItem>\n        <MetaFilterSelectSearch\n          title=\"Type Of Player\"\n          styles={styles}\n          value={playerTypes}\n          onChange={(value) => {\n            setPlayerTypes(value as ValueType[]);\n          }}\n          options={aggregates.playerTypes}\n        />\n      </WrapItem>\n      <WrapItem>\n        <MetaFilterSelectSearch\n          title=\"Skills\"\n          styles={styles}\n          value={skills}\n          onChange={(value) => {\n            setSkills(value as SkillOption[]);\n          }}\n          options={aggregates.skillChoices}\n          showSearch\n        />\n      </WrapItem>\n      <WrapItem>\n        <MetaFilterSelectSearch\n          title=\"Availability\"\n          styles={styles}\n          value={availability ? [availability] : []}\n          onChange={(value) => {\n            const values = value as ValueType[];\n            setAvailability(values[values.length - 1]);\n          }}\n          options={[1, 5, 10, 20, 30, 40].map((value) => ({\n            value: value.toString(),\n            label: `> ${value.toString()} h/week`,\n          }))}\n        />\n      </WrapItem>\n      <WrapItem>\n        <MetaFilterSelectSearch\n          title=\"Time Zone\"\n          styles={styles}\n          value={timezones}\n          onChange={(value) => {\n            const values = value as ValueType[];\n            setTimezones(values.slice(-1));\n          }}\n          options={TimezoneOptions}\n          showSearch\n          isTimezone\n        />\n      </WrapItem>\n    </Wrap>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}