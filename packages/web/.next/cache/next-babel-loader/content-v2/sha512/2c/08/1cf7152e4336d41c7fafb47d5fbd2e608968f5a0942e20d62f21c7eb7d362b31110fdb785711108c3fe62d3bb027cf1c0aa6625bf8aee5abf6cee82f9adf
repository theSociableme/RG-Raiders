{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/PlayerTile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Heading, HStack, LinkBox, LinkOverlay, MetaTag, MetaTile, MetaTileBody, MetaTileHeader, Text, VStack, Wrap, WrapItem } from '@raidguild/ds';\nimport { PlayerAvatar } from 'components/Player/PlayerAvatar';\nimport { PlayerContacts } from 'components/Player/PlayerContacts';\nimport { PlayerTileMemberships } from 'components/Player/PlayerTileMemberships';\nimport { SkillsTags } from 'components/Skills';\nimport React, { useMemo } from 'react';\nimport { FaGlobe } from 'react-icons/fa';\nimport { getPlayerTimeZoneDisplay } from 'utils/dateHelpers';\nimport { getPlayerCoverImage, getPlayerDescription, getPlayerName } from 'utils/playerHelpers';\nvar MAX_BIO_LENGTH = 240;\nexport var PlayerTile = function PlayerTile(_ref) {\n  _s();\n\n  var _player$playerType, _player$playerType2, _player$rank;\n\n  var player = _ref.player;\n  var tzDisplay = useMemo(function () {\n    return getPlayerTimeZoneDisplay(player.timezone);\n  }, [player.timezone]);\n  var description = getPlayerDescription(player);\n  var displayDescription = description && description.length > MAX_BIO_LENGTH ? \"\".concat(description.substring(0, MAX_BIO_LENGTH - 9), \"\\u2026\") : description;\n  return __jsx(LinkBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(MetaTile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    bgImage: \"url(\".concat(getPlayerCoverImage(player), \")\"),\n    bgSize: \"cover\",\n    bgPosition: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    w: \"100%\",\n    h: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(LinkOverlay, {\n    href: \"/player/\".concat(player.username),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(MetaTileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(VStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(PlayerAvatar, {\n    player: player,\n    size: \"xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), __jsx(Heading, {\n    size: \"xs\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, getPlayerName(player))), __jsx(Wrap, {\n    w: \"100%\",\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, (_player$playerType = player.playerType) !== null && _player$playerType !== void 0 && _player$playerType.title ? __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, __jsx(MetaTag, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, (_player$playerType2 = player.playerType) === null || _player$playerType2 === void 0 ? void 0 : _player$playerType2.title.toUpperCase())) : null, player.rank && __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(MetaTag, {\n    backgroundColor: (_player$rank = player.rank) === null || _player$rank === void 0 ? void 0 : _player$rank.toLowerCase(),\n    size: \"md\",\n    color: \"blackAlpha.600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, player.rank)), __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(MetaTag, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"XP: \", Math.floor(player.total_xp)))), tzDisplay !== null && tzDisplay !== void 0 && tzDisplay.timeZone ? __jsx(HStack, {\n    alignItems: \"baseline\",\n    w: \"auto\",\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(FaGlobe, {\n    color: \"blueLight\",\n    fontSize: \"0.875rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), __jsx(Text, {\n    fontSize: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, (tzDisplay === null || tzDisplay === void 0 ? void 0 : tzDisplay.timeZone) || '-'), tzDisplay !== null && tzDisplay !== void 0 && tzDisplay.offset ? __jsx(Text, {\n    fontSize: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, tzDisplay === null || tzDisplay === void 0 ? void 0 : tzDisplay.offset) : '') : null, displayDescription ? __jsx(VStack, {\n    spacing: 2,\n    align: \"stretch\",\n    pt: \"0.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    textStyle: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"ABOUT\"), __jsx(Text, {\n    fontSize: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, displayDescription)) : null)), __jsx(MetaTileBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, player.Player_Skills.length ? __jsx(VStack, {\n    spacing: 2,\n    align: \"stretch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    textStyle: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"SKILLS\"), __jsx(SkillsTags, {\n    skills: player.Player_Skills.map(function (s) {\n      return s.Skill;\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })) : null, __jsx(PlayerTileMemberships, {\n    player: player,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), player.Accounts.length ? __jsx(VStack, {\n    spacing: 2,\n    align: \"stretch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    textStyle: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"CONTACT\"), __jsx(HStack, {\n    mt: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, __jsx(PlayerContacts, {\n    player: player,\n    disableBrightId: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }))) : null)));\n};\n\n_s(PlayerTile, \"1CbmvV6qBPBZu1dduhhfEq1vlUs=\");\n\n_c = PlayerTile;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerTile\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/PlayerTile.tsx"],"names":["Box","Heading","HStack","LinkBox","LinkOverlay","MetaTag","MetaTile","MetaTileBody","MetaTileHeader","Text","VStack","Wrap","WrapItem","PlayerAvatar","PlayerContacts","PlayerTileMemberships","SkillsTags","React","useMemo","FaGlobe","getPlayerTimeZoneDisplay","getPlayerCoverImage","getPlayerDescription","getPlayerName","MAX_BIO_LENGTH","PlayerTile","player","tzDisplay","timezone","description","displayDescription","length","substring","username","playerType","title","toUpperCase","rank","toLowerCase","Math","floor","total_xp","timeZone","offset","Player_Skills","map","s","Skill","Accounts"],"mappings":";;;;;AAAA,SACEA,GADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,WALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,YARF,EASEC,cATF,EAUEC,IAVF,EAWEC,MAXF,EAYEC,IAZF,EAaEC,QAbF,QAcO,aAdP;AAeA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,qBAAT,QAAsC,yCAAtC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAKA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,SACEC,mBADF,EAEEC,oBAFF,EAGEC,aAHF,QAIO,qBAJP;AAUA,IAAMC,cAAc,GAAG,GAAvB;AAEA,OAAO,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAAgB;AAAA;;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACzD,MAAMC,SAAS,GAAGT,OAAO,CAAC;AAAA,WAAME,wBAAwB,CAACM,MAAM,CAACE,QAAR,CAA9B;AAAA,GAAD,EAAkD,CACzEF,MAAM,CAACE,QADkE,CAAlD,CAAzB;AAGA,MAAMC,WAAW,GAAGP,oBAAoB,CAACI,MAAD,CAAxC;AACA,MAAMI,kBAAkB,GACtBD,WAAW,IAAIA,WAAW,CAACE,MAAZ,GAAqBP,cAApC,aACOK,WAAW,CAACG,SAAZ,CAAsB,CAAtB,EAAyBR,cAAc,GAAG,CAA1C,CADP,cAEIK,WAHN;AAIA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,OAAO,gBAASR,mBAAmB,CAACK,MAAD,CAA5B,MADT;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,GAAG,EAAE,CALP;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,CAAC,EAAC,MAPJ;AAQE,IAAA,CAAC,EAAC,QARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,MAAC,WAAD;AAAa,IAAA,IAAI,oBAAaA,MAAM,CAACO,QAApB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEP,MAAtB;AAA8B,IAAA,IAAI,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,aAAa,CAACG,MAAD,CADhB,CAFF,CADF,EAOE,MAAC,IAAD;AAAM,IAAA,CAAC,EAAC,MAAR;AAAe,IAAA,OAAO,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,sBAAAA,MAAM,CAACQ,UAAP,kEAAmBC,KAAnB,GACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACGT,MAAM,CAACQ,UADV,wDACG,oBAAmBC,KAAnB,CAAyBC,WAAzB,EADH,CADF,CADD,GAMG,IAPN,EAQGV,MAAM,CAACW,IAAP,IACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,eAAe,kBAAEX,MAAM,CAACW,IAAT,iDAAE,aAAaC,WAAb,EADnB;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,KAAK,EAAC,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGZ,MAAM,CAACW,IALV,CADF,CATJ,EAmBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwBE,IAAI,CAACC,KAAL,CAAWd,MAAM,CAACe,QAAlB,CAAxB,CADF,CAnBF,CAPF,EA8BGd,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEe,QAAX,GACC,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,UAAnB;AAA8B,IAAA,CAAC,EAAC,MAAhC;AAAuC,IAAA,OAAO,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,WAAf;AAA2B,IAAA,QAAQ,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB,CAAAf,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEe,QAAX,KAAuB,GAA5C,CAFF,EAGGf,SAAS,SAAT,IAAAA,SAAS,WAAT,IAAAA,SAAS,CAAEgB,MAAX,GACC,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBhB,SAArB,aAAqBA,SAArB,uBAAqBA,SAAS,CAAEgB,MAAhC,CADD,GAGC,EANJ,CADD,GAUG,IAxCN,EAyCGb,kBAAkB,GACjB,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,CAAjB;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAoC,IAAA,EAAE,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,kBAArB,CAFF,CADiB,GAKf,IA9CN,CADF,CAXF,EA6DE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACkB,aAAP,CAAqBb,MAArB,GACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,CAAjB;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,UAAD;AACE,IAAA,MAAM,EAAEL,MAAM,CAACkB,aAAP,CAAqBC,GAArB,CAAyB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,KAAT;AAAA,KAAzB,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,GAOG,IARN,EAUE,MAAC,qBAAD;AAAuB,IAAA,MAAM,EAAErB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAYGA,MAAM,CAACsB,QAAP,CAAgBjB,MAAhB,GACC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,CAAjB;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAgC,IAAA,eAAe,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADD,GAOG,IAnBN,CA7DF,CADF,CADF;AAuFD,CAhGM;;GAAMD,U;;KAAAA,U","sourcesContent":["import {\n  Box,\n  Heading,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  MetaTag,\n  MetaTile,\n  MetaTileBody,\n  MetaTileHeader,\n  Text,\n  VStack,\n  Wrap,\n  WrapItem,\n} from '@raidguild/ds';\nimport { PlayerAvatar } from 'components/Player/PlayerAvatar';\nimport { PlayerContacts } from 'components/Player/PlayerContacts';\nimport { PlayerTileMemberships } from 'components/Player/PlayerTileMemberships';\nimport { SkillsTags } from 'components/Skills';\nimport {\n  PlayerFragmentFragment,\n  /* Player_Update_Column, */ Skill,\n} from 'graphql/autogen/types';\nimport React, { useMemo } from 'react';\nimport { FaGlobe } from 'react-icons/fa';\nimport { getPlayerTimeZoneDisplay } from 'utils/dateHelpers';\nimport {\n  getPlayerCoverImage,\n  getPlayerDescription,\n  getPlayerName,\n} from 'utils/playerHelpers';\n\ntype Props = {\n  player: PlayerFragmentFragment;\n};\n\nconst MAX_BIO_LENGTH = 240;\n\nexport const PlayerTile: React.FC<Props> = ({ player }) => {\n  const tzDisplay = useMemo(() => getPlayerTimeZoneDisplay(player.timezone), [\n    player.timezone,\n  ]);\n  const description = getPlayerDescription(player);\n  const displayDescription =\n    description && description.length > MAX_BIO_LENGTH\n      ? `${description.substring(0, MAX_BIO_LENGTH - 9)}…`\n      : description;\n  return (\n    <LinkBox>\n      <MetaTile>\n        <Box\n          bgImage={`url(${getPlayerCoverImage(player)})`}\n          bgSize=\"cover\"\n          bgPosition=\"center\"\n          position=\"absolute\"\n          top={0}\n          left={0}\n          w=\"100%\"\n          h=\"4.5rem\"\n        />\n        <LinkOverlay href={`/player/${player.username}`}>\n          <MetaTileHeader>\n            <VStack>\n              <PlayerAvatar player={player} size=\"xl\" />\n              <Heading size=\"xs\" color=\"white\">\n                {getPlayerName(player)}\n              </Heading>\n            </VStack>\n            <Wrap w=\"100%\" justify=\"center\">\n              {player.playerType?.title ? (\n                <WrapItem>\n                  <MetaTag size=\"md\">\n                    {player.playerType?.title.toUpperCase()}\n                  </MetaTag>\n                </WrapItem>\n              ) : null}\n              {player.rank && (\n                <WrapItem>\n                  <MetaTag\n                    backgroundColor={player.rank?.toLowerCase()}\n                    size=\"md\"\n                    color=\"blackAlpha.600\"\n                  >\n                    {player.rank}\n                  </MetaTag>\n                </WrapItem>\n              )}\n              <WrapItem>\n                <MetaTag size=\"md\">XP: {Math.floor(player.total_xp)}</MetaTag>\n              </WrapItem>\n            </Wrap>\n            {tzDisplay?.timeZone ? (\n              <HStack alignItems=\"baseline\" w=\"auto\" justify=\"center\">\n                <FaGlobe color=\"blueLight\" fontSize=\"0.875rem\" />\n                <Text fontSize=\"lg\">{tzDisplay?.timeZone || '-'}</Text>\n                {tzDisplay?.offset ? (\n                  <Text fontSize=\"sm\">{tzDisplay?.offset}</Text>\n                ) : (\n                  ''\n                )}\n              </HStack>\n            ) : null}\n            {displayDescription ? (\n              <VStack spacing={2} align=\"stretch\" pt=\"0.5rem\">\n                <Text textStyle=\"caption\">ABOUT</Text>\n                <Text fontSize=\"sm\">{displayDescription}</Text>\n              </VStack>\n            ) : null}\n          </MetaTileHeader>\n        </LinkOverlay>\n        <MetaTileBody>\n          {player.Player_Skills.length ? (\n            <VStack spacing={2} align=\"stretch\">\n              <Text textStyle=\"caption\">SKILLS</Text>\n              <SkillsTags\n                skills={player.Player_Skills.map((s) => s.Skill) as Skill[]}\n              />\n            </VStack>\n          ) : null}\n\n          <PlayerTileMemberships player={player} />\n\n          {player.Accounts.length ? (\n            <VStack spacing={2} align=\"stretch\">\n              <Text textStyle=\"caption\">CONTACT</Text>\n              <HStack mt={2}>\n                <PlayerContacts player={player} disableBrightId />\n              </HStack>\n            </VStack>\n          ) : null}\n        </MetaTileBody>\n      </MetaTile>\n    </LinkBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}