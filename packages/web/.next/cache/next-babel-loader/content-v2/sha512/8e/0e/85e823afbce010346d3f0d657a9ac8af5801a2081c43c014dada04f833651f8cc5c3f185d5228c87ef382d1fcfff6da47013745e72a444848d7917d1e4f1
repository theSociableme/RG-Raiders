{"ast":null,"code":"import _defineProperty from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Quest/QuestTags.tsx\",\n    _RepetitionColors,\n    _this = this,\n    _StatusColors,\n    _CompletionStatusColo;\n\nvar __jsx = React.createElement;\nimport { MetaTag, Tooltip } from '@raidguild/ds';\nimport { QuestCompletionStatus_Enum, QuestRepetition_Enum, QuestStatus_Enum } from 'graphql/autogen/types';\nimport moment from 'moment';\nimport React from 'react';\nimport { QuestRepetitionHint } from '../../utils/questHelpers';\nexport var RepetitionColors = (_RepetitionColors = {}, _defineProperty(_RepetitionColors, QuestRepetition_Enum.Recurring, 'cyan.700'), _defineProperty(_RepetitionColors, QuestRepetition_Enum.Personal, 'blue.700'), _defineProperty(_RepetitionColors, QuestRepetition_Enum.Unique, 'yellow.700'), _RepetitionColors);\n\nfunction getRepetitionText(props) {\n  if (props.cooldown && props.repetition === QuestRepetition_Enum.Recurring) {\n    var cd = moment.duration(7200, 'second').humanize();\n    return \"\".concat(QuestRepetitionHint[QuestRepetition_Enum.Recurring], \" (\").concat(cd, \")\");\n  }\n\n  return QuestRepetitionHint[props.repetition];\n}\n\nexport var RepetitionTag = function RepetitionTag(_ref) {\n  var repetition = _ref.repetition,\n      cooldown = _ref.cooldown;\n  return __jsx(Tooltip, {\n    label: getRepetitionText({\n      repetition: repetition,\n      cooldown: cooldown\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, __jsx(MetaTag, {\n    size: \"md\",\n    fontWeight: \"normal\",\n    backgroundColor: RepetitionColors[repetition],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, repetition));\n};\n_c = RepetitionTag;\nexport var StatusColors = (_StatusColors = {}, _defineProperty(_StatusColors, QuestStatus_Enum.Open, 'green.700'), _defineProperty(_StatusColors, QuestStatus_Enum.Closed, 'pink.700'), _StatusColors);\nexport var StatusTag = function StatusTag(_ref2) {\n  var status = _ref2.status;\n  return __jsx(MetaTag, {\n    fontWeight: \"normal\",\n    size: \"md\",\n    backgroundColor: StatusColors[status],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, status);\n};\n_c2 = StatusTag;\nexport var CompletionStatusColors = (_CompletionStatusColo = {}, _defineProperty(_CompletionStatusColo, QuestCompletionStatus_Enum.Accepted, 'green.700'), _defineProperty(_CompletionStatusColo, QuestCompletionStatus_Enum.Rejected, 'pink.700'), _defineProperty(_CompletionStatusColo, QuestCompletionStatus_Enum.Pending, 'yellow.700'), _CompletionStatusColo);\nexport var CompletionStatusTag = function CompletionStatusTag(_ref3) {\n  var status = _ref3.status;\n  return __jsx(MetaTag, {\n    fontWeight: \"normal\",\n    size: \"md\",\n    backgroundColor: CompletionStatusColors[status],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, status);\n};\n_c3 = CompletionStatusTag;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RepetitionTag\");\n$RefreshReg$(_c2, \"StatusTag\");\n$RefreshReg$(_c3, \"CompletionStatusTag\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Quest/QuestTags.tsx"],"names":["MetaTag","Tooltip","QuestCompletionStatus_Enum","QuestRepetition_Enum","QuestStatus_Enum","moment","React","QuestRepetitionHint","RepetitionColors","Recurring","Personal","Unique","getRepetitionText","props","cooldown","repetition","cd","duration","humanize","RepetitionTag","StatusColors","Open","Closed","StatusTag","status","CompletionStatusColors","Accepted","Rejected","Pending","CompletionStatusTag"],"mappings":";;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,aAAjC;AACA,SACEC,0BADF,EAEEC,oBAFF,EAGEC,gBAHF,QAIO,uBAJP;AAKA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,IAAMC,gBAAsD,+DAChEL,oBAAoB,CAACM,SAD2C,EAC/B,UAD+B,sCAEhEN,oBAAoB,CAACO,QAF2C,EAEhC,UAFgC,sCAGhEP,oBAAoB,CAACQ,MAH2C,EAGlC,YAHkC,qBAA5D;;AASP,SAASC,iBAAT,CAA2BC,KAA3B,EAAmD;AACjD,MAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACE,UAAN,KAAqBZ,oBAAoB,CAACM,SAAhE,EAA2E;AACzE,QAAMO,EAAE,GAAGX,MAAM,CAACY,QAAP,CAAgB,IAAhB,EAAsB,QAAtB,EAAgCC,QAAhC,EAAX;AACA,qBAAUX,mBAAmB,CAACJ,oBAAoB,CAACM,SAAtB,CAA7B,eAAkEO,EAAlE;AACD;;AACD,SAAOT,mBAAmB,CAACM,KAAK,CAACE,UAAP,CAA1B;AACD;;AACD,OAAO,IAAMI,aAAwC,GAAG,SAA3CA,aAA2C;AAAA,MACtDJ,UADsD,QACtDA,UADsD;AAAA,MAEtDD,QAFsD,QAEtDA,QAFsD;AAAA,SAItD,MAAC,OAAD;AAAS,IAAA,KAAK,EAAEF,iBAAiB,CAAC;AAAEG,MAAAA,UAAU,EAAVA,UAAF;AAAcD,MAAAA,QAAQ,EAARA;AAAd,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,eAAe,EAAEN,gBAAgB,CAACO,UAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,UALH,CADF,CAJsD;AAAA,CAAjD;KAAMI,a;AAeb,OAAO,IAAMC,YAA8C,uDACxDhB,gBAAgB,CAACiB,IADuC,EAChC,WADgC,kCAExDjB,gBAAgB,CAACkB,MAFuC,EAE9B,UAF8B,iBAApD;AAOP,OAAO,IAAMC,SAAgC,GAAG,SAAnCA,SAAmC;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SAC9C,MAAC,OAAD;AAAS,IAAA,UAAU,EAAC,QAApB;AAA6B,IAAA,IAAI,EAAC,IAAlC;AAAuC,IAAA,eAAe,EAAEJ,YAAY,CAACI,MAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MADH,CAD8C;AAAA,CAAzC;MAAMD,S;AAMb,OAAO,IAAME,sBAGZ,uEACEvB,0BAA0B,CAACwB,QAD7B,EACwC,WADxC,0CAEExB,0BAA0B,CAACyB,QAF7B,EAEwC,UAFxC,0CAGEzB,0BAA0B,CAAC0B,OAH7B,EAGuC,YAHvC,yBAHM;AAWP,OAAO,IAAMC,mBAAmD,GAAG,SAAtDA,mBAAsD;AAAA,MACjEL,MADiE,SACjEA,MADiE;AAAA,SAGjE,MAAC,OAAD;AACE,IAAA,UAAU,EAAC,QADb;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,eAAe,EAAEC,sBAAsB,CAACD,MAAD,CAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,MALH,CAHiE;AAAA,CAA5D;MAAMK,mB","sourcesContent":["import { MetaTag, Tooltip } from '@raidguild/ds';\nimport {\n  QuestCompletionStatus_Enum,\n  QuestRepetition_Enum,\n  QuestStatus_Enum,\n} from 'graphql/autogen/types';\nimport moment from 'moment';\nimport React from 'react';\n\nimport { QuestRepetitionHint } from '../../utils/questHelpers';\n\nexport const RepetitionColors: Record<QuestRepetition_Enum, string> = {\n  [QuestRepetition_Enum.Recurring]: 'cyan.700',\n  [QuestRepetition_Enum.Personal]: 'blue.700',\n  [QuestRepetition_Enum.Unique]: 'yellow.700',\n};\ninterface RepetitionProps {\n  repetition: QuestRepetition_Enum;\n  cooldown: number | undefined | null;\n}\nfunction getRepetitionText(props: RepetitionProps) {\n  if (props.cooldown && props.repetition === QuestRepetition_Enum.Recurring) {\n    const cd = moment.duration(7200, 'second').humanize();\n    return `${QuestRepetitionHint[QuestRepetition_Enum.Recurring]} (${cd})`;\n  }\n  return QuestRepetitionHint[props.repetition];\n}\nexport const RepetitionTag: React.FC<RepetitionProps> = ({\n  repetition,\n  cooldown,\n}) => (\n  <Tooltip label={getRepetitionText({ repetition, cooldown })}>\n    <MetaTag\n      size=\"md\"\n      fontWeight=\"normal\"\n      backgroundColor={RepetitionColors[repetition]}\n    >\n      {repetition}\n    </MetaTag>\n  </Tooltip>\n);\n\nexport const StatusColors: Record<QuestStatus_Enum, string> = {\n  [QuestStatus_Enum.Open]: 'green.700',\n  [QuestStatus_Enum.Closed]: 'pink.700',\n};\ninterface StatusProps {\n  status: QuestStatus_Enum;\n}\nexport const StatusTag: React.FC<StatusProps> = ({ status }) => (\n  <MetaTag fontWeight=\"normal\" size=\"md\" backgroundColor={StatusColors[status]}>\n    {status}\n  </MetaTag>\n);\n\nexport const CompletionStatusColors: Record<\n  QuestCompletionStatus_Enum,\n  string\n> = {\n  [QuestCompletionStatus_Enum.Accepted]: 'green.700',\n  [QuestCompletionStatus_Enum.Rejected]: 'pink.700',\n  [QuestCompletionStatus_Enum.Pending]: 'yellow.700',\n};\ninterface QuestCompletionProps {\n  status: QuestCompletionStatus_Enum;\n}\nexport const CompletionStatusTag: React.FC<QuestCompletionProps> = ({\n  status,\n}) => (\n  <MetaTag\n    fontWeight=\"normal\"\n    size=\"md\"\n    backgroundColor={CompletionStatusColors[status]}\n  >\n    {status}\n  </MetaTag>\n);\n"]},"metadata":{},"sourceType":"module"}