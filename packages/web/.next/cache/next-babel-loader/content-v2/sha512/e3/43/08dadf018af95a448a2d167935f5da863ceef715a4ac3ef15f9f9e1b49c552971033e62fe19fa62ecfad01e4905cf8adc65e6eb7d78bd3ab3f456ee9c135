{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupPersonalityType.tsx\";\nvar __jsx = React.createElement;\nimport { Button, Flex, Image, MetaButton, MetaHeading, Text, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { MetaLink } from 'components/Link';\nimport { ColorBar } from 'components/Player/ColorBar';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdateAboutYouMutation } from 'graphql/autogen/types';\nimport { images as BaseImages } from 'graphql/getPersonalityInfo';\nimport { useUser } from 'lib/hooks';\nimport React, { useCallback, useState } from 'react';\nexport const SetupPersonalityType = ({\n  personalityTypes,\n  colorMask,\n  setColorMask\n}) => {\n  const {\n    onNextPress,\n    nextButtonLabel\n  } = useSetupFlow();\n  const {\n    user\n  } = useUser({\n    redirectTo: '/'\n  });\n  const toast = useToast();\n  const [updateAboutYouRes, updateAboutYou] = useUpdateAboutYouMutation();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const handleNextPress = useCallback(async () => {\n    var _user$player, _user$player$ColorAsp;\n\n    if (!user) return;\n    setLoading(true);\n\n    if (((_user$player = user.player) === null || _user$player === void 0 ? void 0 : (_user$player$ColorAsp = _user$player.ColorAspect) === null || _user$player$ColorAsp === void 0 ? void 0 : _user$player$ColorAsp.mask) !== colorMask) {\n      const {\n        error\n      } = await updateAboutYou({\n        playerId: user.id,\n        input: {\n          color_mask: colorMask\n        }\n      });\n\n      if (error) {\n        console.warn(error); // eslint-disable-line no-console\n\n        toast({\n          title: 'Error',\n          description: 'Unable to update personality type. The octo is sad. ðŸ˜¢',\n          status: 'error',\n          isClosable: true\n        });\n        setLoading(false);\n        return;\n      }\n    }\n\n    onNextPress();\n  }, [colorMask, onNextPress, toast, updateAboutYou, user]); // mask should always only have at most a single bit set\n\n  const toggleMaskElement = (mask = 0) => {\n    setColorMask((current = 0) => {\n      if ((mask & current) > 0) {\n        // if the bit in mask is set\n        return current & ~mask; // unset it\n      }\n\n      return current | mask; // otherwise set it\n    });\n  };\n\n  return __jsx(FlexContainer, {\n    maxW: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(MetaHeading, {\n    mb: 5,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Person\\xADality Type\"), __jsx(Text, {\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Please select your personality components below. Not sure what type you are?\", __jsx(Text, {\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \" Take \"), __jsx(MetaLink, {\n    href: \"//dysbulic.github.io/5-color-radar/#/explore/\",\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"a quick exam\"), __jsx(Text, {\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \" or \"), __jsx(MetaLink, {\n    href: \"//dysbulic.github.io/5-color-radar/#/test/\",\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"a longer quiz\"), \".\")), __jsx(FlexContainer, {\n    grow: 1,\n    spacing: 8,\n    maxW: \"70rem\",\n    direction: \"row\",\n    wrap: \"wrap\",\n    id: \"colors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, Object.entries(BaseImages).reverse().map(([orig, image], idx) => {\n    const option = personalityTypes[parseInt(orig, 10)];\n    const {\n      mask = 0\n    } = option !== null && option !== void 0 ? option : {};\n    const selected = ((colorMask !== null && colorMask !== void 0 ? colorMask : 0) & mask) > 0;\n    return __jsx(Button, {\n      key: mask,\n      display: \"flex\",\n      direction: \"row\",\n      p: 6,\n      m: 2,\n      h: \"auto\",\n      spacing: 4,\n      borderRadius: 8,\n      cursor: \"pointer\",\n      onClick: () => toggleMaskElement(mask),\n      autoFocus: idx === 0 // Doesn't work\n      ,\n      ref: input => {\n        if (idx === 0 && !(input !== null && input !== void 0 && input.getAttribute('focused-once'))) {\n          input === null || input === void 0 ? void 0 : input.focus();\n          input === null || input === void 0 ? void 0 : input.setAttribute('focused-once', 'true');\n        }\n      },\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          handleNextPress();\n          e.preventDefault();\n        }\n      },\n      transition: \"background 0.25s, filter 0.5s\",\n      bgColor: selected ? 'purpleBoxDark' : 'purpleBoxLight',\n      _hover: {\n        filter: 'hue-rotate(25deg)'\n      },\n      _focus: {\n        borderColor: '#FFFFFF55',\n        outline: 'none'\n      },\n      _active: {\n        bg: selected ? 'purpleBoxDark' : 'purpleBoxLight'\n      },\n      borderWidth: 2,\n      borderColor: selected ? 'purple.400' : 'transparent',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, __jsx(Image, {\n      w: \"100%\",\n      maxW: 16,\n      h: 16,\n      src: image,\n      alt: option.name,\n      filter: \"drop-shadow(0px 0px 3px black)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), __jsx(FlexContainer, {\n      align: \"stretch\",\n      ml: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      color: \"white\",\n      casing: \"uppercase\",\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, option.name), __jsx(Text, {\n      color: \"blueLight\",\n      fontWeight: \"normal\",\n      whiteSpace: \"initial\",\n      textAlign: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, option.description)));\n  })), __jsx(ColorBar, {\n    mask: colorMask,\n    mt: 8,\n    w: \"min(100vw, 30rem)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }), __jsx(MetaButton, {\n    onClick: handleNextPress,\n    mt: 10,\n    isDisabled: colorMask === undefined,\n    isLoading: updateAboutYouRes.fetching || loading,\n    loadingText: \"Saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, nextButtonLabel));\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupPersonalityType.tsx"],"names":["Button","Flex","Image","MetaButton","MetaHeading","Text","useToast","FlexContainer","MetaLink","ColorBar","useSetupFlow","useUpdateAboutYouMutation","images","BaseImages","useUser","React","useCallback","useState","SetupPersonalityType","personalityTypes","colorMask","setColorMask","onNextPress","nextButtonLabel","user","redirectTo","toast","updateAboutYouRes","updateAboutYou","loading","setLoading","handleNextPress","player","ColorAspect","mask","error","playerId","id","input","color_mask","console","warn","title","description","status","isClosable","toggleMaskElement","current","Object","entries","reverse","map","orig","image","idx","option","parseInt","selected","getAttribute","focus","setAttribute","e","key","preventDefault","filter","borderColor","outline","bg","name","undefined","fetching"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Flex,\n  Image,\n  MetaButton,\n  MetaHeading,\n  Text,\n  useToast,\n} from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { MetaLink } from 'components/Link';\nimport { ColorBar } from 'components/Player/ColorBar';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdateAboutYouMutation } from 'graphql/autogen/types';\nimport { images as BaseImages } from 'graphql/getPersonalityInfo';\nimport { PersonalityOption } from 'graphql/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useCallback, useState } from 'react';\n\nexport type SetupPersonalityTypeProps = {\n  // keyed on a bitmask of the format 0bWUBRG\n  personalityTypes: { [x: number]: PersonalityOption };\n  colorMask: number | undefined;\n  setColorMask: React.Dispatch<React.SetStateAction<number | undefined>>;\n};\n\nexport const SetupPersonalityType: React.FC<SetupPersonalityTypeProps> = ({\n  personalityTypes,\n  colorMask,\n  setColorMask,\n}) => {\n  const { onNextPress, nextButtonLabel } = useSetupFlow();\n  const { user } = useUser({ redirectTo: '/' });\n  const toast = useToast();\n  const [updateAboutYouRes, updateAboutYou] = useUpdateAboutYouMutation();\n  const [loading, setLoading] = useState(false);\n\n  const handleNextPress = useCallback(async () => {\n    if (!user) return;\n\n    setLoading(true);\n    if (user.player?.ColorAspect?.mask !== colorMask) {\n      const { error } = await updateAboutYou({\n        playerId: user.id,\n        input: {\n          color_mask: colorMask,\n        },\n      });\n\n      if (error) {\n        console.warn(error); // eslint-disable-line no-console\n        toast({\n          title: 'Error',\n          description: 'Unable to update personality type. The octo is sad. ðŸ˜¢',\n          status: 'error',\n          isClosable: true,\n        });\n        setLoading(false);\n        return;\n      }\n    }\n\n    onNextPress();\n  }, [colorMask, onNextPress, toast, updateAboutYou, user]);\n\n  // mask should always only have at most a single bit set\n  const toggleMaskElement = (mask = 0): void => {\n    setColorMask((current = 0) => {\n      if ((mask & current) > 0) {\n        // if the bit in mask is set\n        return current & ~mask; // unset it\n      }\n      return current | mask; // otherwise set it\n    });\n  };\n\n  return (\n    <FlexContainer maxW=\"100%\">\n      <Flex direction=\"column\">\n        <MetaHeading mb={5} textAlign=\"center\">\n          Person&#xAD;ality Type\n        </MetaHeading>\n        <Text mb={10}>\n          Please select your personality components below. Not sure what type\n          you are?\n          <Text as=\"span\"> Take </Text>\n          <MetaLink\n            href=\"//dysbulic.github.io/5-color-radar/#/explore/\"\n            isExternal\n          >\n            a quick exam\n          </MetaLink>\n          <Text as=\"span\"> or </Text>\n          <MetaLink\n            href=\"//dysbulic.github.io/5-color-radar/#/test/\"\n            isExternal\n          >\n            a longer quiz\n          </MetaLink>\n          .\n        </Text>\n      </Flex>\n      <FlexContainer\n        grow={1}\n        spacing={8}\n        maxW=\"70rem\"\n        direction=\"row\"\n        wrap=\"wrap\"\n        id=\"colors\"\n      >\n        {Object.entries(BaseImages)\n          .reverse()\n          .map(([orig, image], idx) => {\n            const option = personalityTypes[parseInt(orig, 10)];\n            const { mask = 0 } = option ?? {};\n            const selected = ((colorMask ?? 0) & mask) > 0;\n\n            return (\n              <Button\n                key={mask}\n                display=\"flex\"\n                direction=\"row\"\n                p={6}\n                m={2}\n                h=\"auto\"\n                spacing={4}\n                borderRadius={8}\n                cursor=\"pointer\"\n                onClick={() => toggleMaskElement(mask)}\n                autoFocus={idx === 0} // Doesn't work\n                ref={(input) => {\n                  if (idx === 0 && !input?.getAttribute('focused-once')) {\n                    input?.focus();\n                    input?.setAttribute('focused-once', 'true');\n                  }\n                }}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    handleNextPress();\n                    e.preventDefault();\n                  }\n                }}\n                transition=\"background 0.25s, filter 0.5s\"\n                bgColor={selected ? 'purpleBoxDark' : 'purpleBoxLight'}\n                _hover={{\n                  filter: 'hue-rotate(25deg)',\n                }}\n                _focus={{\n                  borderColor: '#FFFFFF55',\n                  outline: 'none',\n                }}\n                _active={{ bg: selected ? 'purpleBoxDark' : 'purpleBoxLight' }}\n                borderWidth={2}\n                borderColor={selected ? 'purple.400' : 'transparent'}\n              >\n                <Image\n                  w=\"100%\"\n                  maxW={16}\n                  h={16}\n                  src={image}\n                  alt={option.name}\n                  filter=\"drop-shadow(0px 0px 3px black)\"\n                />\n                <FlexContainer align=\"stretch\" ml={2}>\n                  <Text color=\"white\" casing=\"uppercase\" textAlign=\"left\">\n                    {option.name}\n                  </Text>\n                  <Text\n                    color=\"blueLight\"\n                    fontWeight=\"normal\"\n                    whiteSpace=\"initial\"\n                    textAlign=\"left\"\n                  >\n                    {option.description}\n                  </Text>\n                </FlexContainer>\n              </Button>\n            );\n          })}\n      </FlexContainer>\n\n      <ColorBar mask={colorMask} mt={8} w=\"min(100vw, 30rem)\" />\n\n      <MetaButton\n        onClick={handleNextPress}\n        mt={10}\n        isDisabled={colorMask === undefined}\n        isLoading={updateAboutYouRes.fetching || loading}\n        loadingText=\"Saving\"\n      >\n        {nextButtonLabel}\n      </MetaButton>\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}