{"ast":null,"code":"import _extends from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/ColorBar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Flex } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { colors, getPersonalityInfo, images } from 'graphql/getPersonalityInfo';\nimport React, { useEffect, useState } from 'react'; // This is just verbose, so I am pulling it out to\n// save space in the main template\n\nvar maskImageStyle = function maskImageStyle(_ref) {\n  var url = _ref.url;\n  return {\n    maskImage: \"url(\".concat(url, \")\"),\n    maskSize: 'contain',\n    maskPosition: 'center',\n    maskRepeat: 'no-repeat',\n    WebkitMaskImage: \"url(\".concat(url, \")\"),\n    WebkitMaskSize: 'contain',\n    WebkitMaskPosition: 'center',\n    WebkitMaskRepeat: 'no-repeat'\n  };\n};\n/* The color bar is below the attribute selection screen,\n * and shows an equally proportioned set of colors with\n * monochrome icons above them and a term for the\n * combination below.\n */\n\n\nexport var ColorBar = function ColorBar(_ref2) {\n  _s();\n\n  var _types$mask;\n\n  var _ref2$mask = _ref2.mask,\n      mask = _ref2$mask === void 0 ? 0 : _ref2$mask,\n      props = _objectWithoutProperties(_ref2, [\"mask\"]);\n\n  var _useState = useState([]),\n      parts = _useState[0],\n      setParts = _useState[1];\n\n  var _useState2 = useState({}),\n      types = _useState2[0],\n      setTypes = _useState2[1];\n\n  var load = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$getPersonality, ps, ts;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getPersonalityInfo();\n\n            case 2:\n              _yield$getPersonality = _context.sent;\n              ps = _yield$getPersonality.parts;\n              ts = _yield$getPersonality.types;\n              setParts(ps);\n              setTypes(ts);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function load() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    load();\n  }, []);\n  return __jsx(Flex, _extends({\n    direction: \"column-reverse\",\n    w: \"100%\",\n    maxW: \"100%\",\n    className: \"color-bar\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(Flex, {\n    maxW: \"100%\",\n    minH: \"1.5rem\",\n    mt: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, parts.map(function (part) {\n    var set = (mask & part.mask) !== 0;\n    return !set ? null : // if the bit isn't set // return null for map to work\n    __jsx(Flex, {\n      key: part.mask,\n      grow: 1,\n      justify: \"center\",\n      opacity: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      bg: \"linear-gradient(to top, \".concat(colors[part.mask].start, \", \").concat(colors[part.mask].end, \")\"),\n      h: 6,\n      w: 6,\n      title: part.name,\n      style: maskImageStyle({\n        url: images[part.mask]\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Flex, {\n    minH: \"1.5rem\",\n    flex: \"0 0 100%\",\n    minW: \"100%\",\n    border: \"0\",\n    borderRadius: \"15px\",\n    overflow: \"hidden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, parts.map(function (part) {\n    return (mask & part.mask) === 0 ? null : __jsx(Flex, {\n      key: part.mask,\n      grow: 1,\n      h: \"1.5rem\",\n      bg: \"linear-gradient(to right, \".concat(colors[part.mask].start, \", \").concat(colors[part.mask].end, \")\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(FlexContainer, {\n    mb: 2,\n    fontFamily: \"mono\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    as: \"span\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, types === null || types === void 0 ? void 0 : (_types$mask = types[mask]) === null || _types$mask === void 0 ? void 0 : _types$mask.name)));\n};\n\n_s(ColorBar, \"eYKhlsqwb0t2gAd2NBfQwwoSijE=\");\n\n_c = ColorBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorBar\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/ColorBar.tsx"],"names":["Box","Flex","FlexContainer","colors","getPersonalityInfo","images","React","useEffect","useState","maskImageStyle","url","maskImage","maskSize","maskPosition","maskRepeat","WebkitMaskImage","WebkitMaskSize","WebkitMaskPosition","WebkitMaskRepeat","ColorBar","mask","props","parts","setParts","types","setTypes","load","ps","ts","map","part","set","start","end","name"],"mappings":"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","sourcesContent":["import { Box, ChakraProps, Flex } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { colors, getPersonalityInfo, images } from 'graphql/getPersonalityInfo';\nimport { PersonalityOption } from 'graphql/types';\nimport React, { useEffect, useState } from 'react';\n\n// This is just verbose, so I am pulling it out to\n// save space in the main template\nconst maskImageStyle = ({ url }: { url: string }): Record<string, string> => ({\n  maskImage: `url(${url})`,\n  maskSize: 'contain',\n  maskPosition: 'center',\n  maskRepeat: 'no-repeat',\n  WebkitMaskImage: `url(${url})`,\n  WebkitMaskSize: 'contain',\n  WebkitMaskPosition: 'center',\n  WebkitMaskRepeat: 'no-repeat',\n});\n\n/* The color bar is below the attribute selection screen,\n * and shows an equally proportioned set of colors with\n * monochrome icons above them and a term for the\n * combination below.\n */\nexport const ColorBar = ({\n  mask = 0,\n  ...props\n}: ChakraProps & { mask: number | undefined }): JSX.Element => {\n  const [parts, setParts] = useState<Array<PersonalityOption>>([]);\n  const [types, setTypes] = useState<Record<number, PersonalityOption>>({});\n  const load = async () => {\n    const { parts: ps, types: ts } = await getPersonalityInfo();\n    setParts(ps);\n    setTypes(ts);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <Flex\n      direction=\"column-reverse\"\n      w=\"100%\"\n      maxW=\"100%\"\n      className=\"color-bar\"\n      {...props}\n    >\n      <Flex maxW=\"100%\" minH=\"1.5rem\" mt={3}>\n        {parts.map((part) => {\n          const set = (mask & part.mask) !== 0;\n\n          return !set ? null : ( // if the bit isn't set // return null for map to work\n            <Flex key={part.mask} grow={1} justify=\"center\" opacity={1}>\n              <Box\n                bg={`linear-gradient(to top, ${colors[part.mask].start}, ${\n                  colors[part.mask].end\n                })`}\n                h={6}\n                w={6}\n                title={part.name}\n                style={maskImageStyle({ url: images[part.mask] })}\n              />\n            </Flex>\n          );\n        })}\n      </Flex>\n      <Flex\n        minH=\"1.5rem\"\n        flex=\"0 0 100%\"\n        minW=\"100%\"\n        border=\"0\"\n        borderRadius=\"15px\"\n        overflow=\"hidden\"\n      >\n        {parts.map((part) =>\n          (mask & part.mask) === 0 ? null : (\n            <Flex\n              key={part.mask}\n              grow={1}\n              h=\"1.5rem\"\n              bg={`linear-gradient(to right, ${colors[part.mask].start}, ${\n                colors[part.mask].end\n              })`}\n            />\n          ),\n        )}\n      </Flex>\n      <FlexContainer mb={2} fontFamily=\"mono\">\n        <Box as=\"span\">{types?.[mask]?.name}</Box>\n      </FlexContainer>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}