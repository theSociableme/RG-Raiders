{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/ColorBar.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Box, Flex } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { colors, getPersonalityInfo, images } from 'graphql/getPersonalityInfo';\nimport React, { useEffect, useState } from 'react'; // This is just verbose, so I am pulling it out to\n// save space in the main template\n\nconst maskImageStyle = ({\n  url\n}) => ({\n  maskImage: `url(${url})`,\n  maskSize: 'contain',\n  maskPosition: 'center',\n  maskRepeat: 'no-repeat',\n  WebkitMaskImage: `url(${url})`,\n  WebkitMaskSize: 'contain',\n  WebkitMaskPosition: 'center',\n  WebkitMaskRepeat: 'no-repeat'\n});\n/* The color bar is below the attribute selection screen,\n * and shows an equally proportioned set of colors with\n * monochrome icons above them and a term for the\n * combination below.\n */\n\n\nexport const ColorBar = (_ref) => {\n  var _types$mask;\n\n  let {\n    mask = 0\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"mask\"]);\n\n  const {\n    0: parts,\n    1: setParts\n  } = useState([]);\n  const {\n    0: types,\n    1: setTypes\n  } = useState({});\n\n  const load = async () => {\n    const {\n      parts: ps,\n      types: ts\n    } = await getPersonalityInfo();\n    setParts(ps);\n    setTypes(ts);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n  return __jsx(Flex, _extends({\n    direction: \"column-reverse\",\n    w: \"100%\",\n    maxW: \"100%\",\n    className: \"color-bar\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(Flex, {\n    maxW: \"100%\",\n    minH: \"1.5rem\",\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, parts.map(part => {\n    const set = (mask & part.mask) !== 0;\n    return !set ? null : // if the bit isn't set // return null for map to work\n    __jsx(Flex, {\n      key: part.mask,\n      grow: 1,\n      justify: \"center\",\n      opacity: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      bg: `linear-gradient(to top, ${colors[part.mask].start}, ${colors[part.mask].end})`,\n      h: 6,\n      w: 6,\n      title: part.name,\n      style: maskImageStyle({\n        url: images[part.mask]\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(Flex, {\n    minH: \"1.5rem\",\n    flex: \"0 0 100%\",\n    minW: \"100%\",\n    border: \"0\",\n    borderRadius: \"15px\",\n    overflow: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, parts.map(part => (mask & part.mask) === 0 ? null : __jsx(Flex, {\n    key: part.mask,\n    grow: 1,\n    h: \"1.5rem\",\n    bg: `linear-gradient(to right, ${colors[part.mask].start}, ${colors[part.mask].end})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))), __jsx(FlexContainer, {\n    mb: 2,\n    fontFamily: \"mono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, types === null || types === void 0 ? void 0 : (_types$mask = types[mask]) === null || _types$mask === void 0 ? void 0 : _types$mask.name)));\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/ColorBar.tsx"],"names":["Box","Flex","FlexContainer","colors","getPersonalityInfo","images","React","useEffect","useState","maskImageStyle","url","maskImage","maskSize","maskPosition","maskRepeat","WebkitMaskImage","WebkitMaskSize","WebkitMaskPosition","WebkitMaskRepeat","ColorBar","mask","props","parts","setParts","types","setTypes","load","ps","ts","map","part","set","start","end","name"],"mappings":"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","sourcesContent":["import { Box, ChakraProps, Flex } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { colors, getPersonalityInfo, images } from 'graphql/getPersonalityInfo';\nimport { PersonalityOption } from 'graphql/types';\nimport React, { useEffect, useState } from 'react';\n\n// This is just verbose, so I am pulling it out to\n// save space in the main template\nconst maskImageStyle = ({ url }: { url: string }): Record<string, string> => ({\n  maskImage: `url(${url})`,\n  maskSize: 'contain',\n  maskPosition: 'center',\n  maskRepeat: 'no-repeat',\n  WebkitMaskImage: `url(${url})`,\n  WebkitMaskSize: 'contain',\n  WebkitMaskPosition: 'center',\n  WebkitMaskRepeat: 'no-repeat',\n});\n\n/* The color bar is below the attribute selection screen,\n * and shows an equally proportioned set of colors with\n * monochrome icons above them and a term for the\n * combination below.\n */\nexport const ColorBar = ({\n  mask = 0,\n  ...props\n}: ChakraProps & { mask: number | undefined }): JSX.Element => {\n  const [parts, setParts] = useState<Array<PersonalityOption>>([]);\n  const [types, setTypes] = useState<Record<number, PersonalityOption>>({});\n  const load = async () => {\n    const { parts: ps, types: ts } = await getPersonalityInfo();\n    setParts(ps);\n    setTypes(ts);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <Flex\n      direction=\"column-reverse\"\n      w=\"100%\"\n      maxW=\"100%\"\n      className=\"color-bar\"\n      {...props}\n    >\n      <Flex maxW=\"100%\" minH=\"1.5rem\" mt={3}>\n        {parts.map((part) => {\n          const set = (mask & part.mask) !== 0;\n\n          return !set ? null : ( // if the bit isn't set // return null for map to work\n            <Flex key={part.mask} grow={1} justify=\"center\" opacity={1}>\n              <Box\n                bg={`linear-gradient(to top, ${colors[part.mask].start}, ${\n                  colors[part.mask].end\n                })`}\n                h={6}\n                w={6}\n                title={part.name}\n                style={maskImageStyle({ url: images[part.mask] })}\n              />\n            </Flex>\n          );\n        })}\n      </Flex>\n      <Flex\n        minH=\"1.5rem\"\n        flex=\"0 0 100%\"\n        minW=\"100%\"\n        border=\"0\"\n        borderRadius=\"15px\"\n        overflow=\"hidden\"\n      >\n        {parts.map((part) =>\n          (mask & part.mask) === 0 ? null : (\n            <Flex\n              key={part.mask}\n              grow={1}\n              h=\"1.5rem\"\n              bg={`linear-gradient(to right, ${colors[part.mask].start}, ${\n                colors[part.mask].end\n              })`}\n            />\n          ),\n        )}\n      </Flex>\n      <FlexContainer mb={2} fontFamily=\"mono\">\n        <Box as=\"span\">{types?.[mask]?.name}</Box>\n      </FlexContainer>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}