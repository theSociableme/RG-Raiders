{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupSkills.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MetaButton, MetaHeading, MetaTheme, SelectSearch, selectStyles, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdatePlayerSkillsMutation } from 'graphql/autogen/types';\nimport { SkillColors } from 'graphql/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\n\nvar styles = _objectSpread(_objectSpread({}, selectStyles), {}, {\n  multiValue: function multiValue(s, _ref) {\n    var data = _ref.data;\n    return _objectSpread(_objectSpread({}, s), {}, {\n      background: SkillColors[data.category],\n      color: MetaTheme.colors.white\n    });\n  },\n  multiValueLabel: function multiValueLabel(s, _ref2) {\n    var data = _ref2.data;\n    return _objectSpread(_objectSpread({}, s), {}, {\n      background: SkillColors[data.category],\n      color: MetaTheme.colors.white\n    });\n  },\n  groupHeading: function groupHeading(s, _ref3) {\n    var children = _ref3.children;\n    return _objectSpread(_objectSpread(_objectSpread({}, s), selectStyles.groupHeading && selectStyles.groupHeading(s, {\n      children: children\n    })), {}, {\n      background: SkillColors[children]\n    });\n  }\n});\n\nexport var SetupSkills = function SetupSkills(_ref4) {\n  _s();\n\n  var skillChoices = _ref4.skillChoices,\n      skills = _ref4.skills,\n      setSkills = _ref4.setSkills;\n\n  var _useSetupFlow = useSetupFlow(),\n      onNextPress = _useSetupFlow.onNextPress,\n      nextButtonLabel = _useSetupFlow.nextButtonLabel;\n\n  var _useUser = useUser({\n    redirectTo: '/'\n  }),\n      user = _useUser.user;\n\n  var toast = useToast();\n\n  var _useUpdatePlayerSkill = useUpdatePlayerSkillsMutation(),\n      _useUpdatePlayerSkill2 = _slicedToArray(_useUpdatePlayerSkill, 2),\n      updateSkillsRes = _useUpdatePlayerSkill2[0],\n      updateSkills = _useUpdatePlayerSkill2[1];\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var handleNextPress = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$updateSkills, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (user) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              setLoading(true);\n              _context.next = 5;\n              return updateSkills({\n                skills: skills.map(function (s) {\n                  return {\n                    skill_id: s.id\n                  };\n                })\n              });\n\n            case 5:\n              _yield$updateSkills = _context.sent;\n              error = _yield$updateSkills.error;\n\n              if (!error) {\n                _context.next = 12;\n                break;\n              }\n\n              console.warn(error); // eslint-disable-line no-console\n\n              toast({\n                title: 'Error',\n                description: 'Unable to update player skills. The octo is sad ðŸ˜¢',\n                status: 'error',\n                isClosable: true\n              });\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 12:\n              onNextPress();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNextPress() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(FlexContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(MetaHeading, {\n    mb: 10,\n    mt: -64,\n    textAlign: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"What are your super\\xADpowers?\"), __jsx(FlexContainer, {\n    w: \"100%\",\n    align: \"stretch\",\n    maxW: \"50rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(SelectSearch, {\n    isMulti: true,\n    styles: styles,\n    value: skills,\n    onChange: function onChange(value) {\n      return setSkills(value);\n    },\n    options: skillChoices,\n    autoFocus: true,\n    closeMenuOnSelect: false,\n    placeholder: \"ADD YOUR SKILLS\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), __jsx(MetaButton, {\n    onClick: handleNextPress,\n    mt: 10,\n    isLoading: updateSkillsRes.fetching || loading,\n    loadingText: \"Saving\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, nextButtonLabel));\n};\n\n_s(SetupSkills, \"Py0c8kHBM7S7TjAtC4oSKS6ESgE=\", false, function () {\n  return [useSetupFlow, useUser, useToast, useUpdatePlayerSkillsMutation];\n});\n\n_c = SetupSkills;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetupSkills\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupSkills.tsx"],"names":["MetaButton","MetaHeading","MetaTheme","SelectSearch","selectStyles","useToast","FlexContainer","useSetupFlow","useUpdatePlayerSkillsMutation","SkillColors","useUser","React","useState","styles","multiValue","s","data","background","category","color","colors","white","multiValueLabel","groupHeading","children","SetupSkills","skillChoices","skills","setSkills","onNextPress","nextButtonLabel","redirectTo","user","toast","updateSkillsRes","updateSkills","loading","setLoading","handleNextPress","map","skill_id","id","error","console","warn","title","description","status","isClosable","value","fetching"],"mappings":"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","sourcesContent":["import {\n  MetaButton,\n  MetaHeading,\n  MetaTheme,\n  SelectSearch,\n  selectStyles,\n  useToast,\n} from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport {\n  SkillCategory_Enum,\n  useUpdatePlayerSkillsMutation,\n} from 'graphql/autogen/types';\nimport { SkillColors } from 'graphql/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\nimport { CategoryOption, SkillOption } from 'utils/skillHelpers';\n\nexport type SetupSkillsProps = {\n  skillChoices: Array<CategoryOption>;\n  skills: Array<SkillOption>;\n  setSkills: React.Dispatch<React.SetStateAction<Array<SkillOption>>>;\n};\n\nconst styles: typeof selectStyles = {\n  ...selectStyles,\n  multiValue: (s, { data }) => ({\n    ...s,\n    background: SkillColors[data.category as SkillCategory_Enum],\n    color: MetaTheme.colors.white,\n  }),\n  multiValueLabel: (s, { data }) => ({\n    ...s,\n    background: SkillColors[data.category as SkillCategory_Enum],\n    color: MetaTheme.colors.white,\n  }),\n  groupHeading: (s, { children }) => ({\n    ...s,\n    ...(selectStyles.groupHeading &&\n      selectStyles.groupHeading(s, { children })),\n    background: SkillColors[children as SkillCategory_Enum],\n  }),\n};\n\nexport const SetupSkills: React.FC<SetupSkillsProps> = ({\n  skillChoices,\n  skills,\n  setSkills,\n}) => {\n  const { onNextPress, nextButtonLabel } = useSetupFlow();\n  const { user } = useUser({ redirectTo: '/' });\n  const toast = useToast();\n\n  const [updateSkillsRes, updateSkills] = useUpdatePlayerSkillsMutation();\n  const [loading, setLoading] = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    const { error } = await updateSkills({\n      skills: skills.map((s) => ({ skill_id: s.id })),\n    });\n\n    if (error) {\n      console.warn(error); // eslint-disable-line no-console\n      toast({\n        title: 'Error',\n        description: 'Unable to update player skills. The octo is sad ðŸ˜¢',\n        status: 'error',\n        isClosable: true,\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return (\n    <FlexContainer>\n      <MetaHeading mb={10} mt={-64} textAlign=\"center\">\n        What are your super&#xAD;powers?\n      </MetaHeading>\n      <FlexContainer w=\"100%\" align=\"stretch\" maxW=\"50rem\">\n        <SelectSearch\n          isMulti\n          styles={styles}\n          value={skills}\n          onChange={(value) => setSkills(value as Array<SkillOption>)}\n          options={skillChoices}\n          autoFocus\n          closeMenuOnSelect={false}\n          placeholder=\"ADD YOUR SKILLS\"\n        />\n      </FlexContainer>\n      <MetaButton\n        onClick={handleNextPress}\n        mt={10}\n        isLoading={updateSkillsRes.fetching || loading}\n        loadingText=\"Saving\"\n      >\n        {nextButtonLabel}\n      </MetaButton>\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}