{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupAvailability.tsx\";\nvar __jsx = React.createElement;\nimport { Input, InputGroup, InputLeftElement, InputRightAddon, MetaButton, MetaHeading, Text, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdateProfileMutation } from 'graphql/autogen/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useEffect, useState } from 'react';\nexport const SetupAvailability = ({\n  availability,\n  setAvailability\n}) => {\n  const {\n    onNextPress,\n    nextButtonLabel\n  } = useSetupFlow();\n  const {\n    0: invalid,\n    1: setInvalid\n  } = useState(false);\n  const {\n    user\n  } = useUser({\n    redirectTo: '/'\n  });\n  const toast = useToast();\n  useEffect(() => {\n    const value = Number(availability);\n    setInvalid(value < 0 || value > 168);\n  }, [availability]);\n  const [updateProfileRes, updateProfile] = useUpdateProfileMutation();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n    setLoading(true);\n    const {\n      error\n    } = await updateProfile({\n      playerId: user.id,\n      input: {\n        availability_hours: Number(availability)\n      }\n    });\n\n    if (error) {\n      toast({\n        title: 'Error',\n        description: 'Unable to update availability. The octo is sad ðŸ˜¢',\n        status: 'error',\n        isClosable: true\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return __jsx(FlexContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(MetaHeading, {\n    mb: 5,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Avail\\xADability\"), __jsx(Text, {\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"What is your weekly availability for any kind of freelance work?\"), __jsx(InputGroup, {\n    borderColor: \"transparent\",\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(InputLeftElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"clock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDD5B\")), __jsx(Input, {\n    background: \"dark\",\n    placeholder: \"40\",\n    type: \"number\",\n    value: availability,\n    onChange: e => setAvailability(e.target.value),\n    isInvalid: invalid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), __jsx(InputRightAddon, {\n    background: \"purpleBoxDark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"hr/week\")), __jsx(MetaButton, {\n    onClick: handleNextPress,\n    mt: 10,\n    isDisabled: invalid,\n    isLoading: updateProfileRes.fetching || loading,\n    loadingText: \"Saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, nextButtonLabel));\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupAvailability.tsx"],"names":["Input","InputGroup","InputLeftElement","InputRightAddon","MetaButton","MetaHeading","Text","useToast","FlexContainer","useSetupFlow","useUpdateProfileMutation","useUser","React","useEffect","useState","SetupAvailability","availability","setAvailability","onNextPress","nextButtonLabel","invalid","setInvalid","user","redirectTo","toast","value","Number","updateProfileRes","updateProfile","loading","setLoading","handleNextPress","error","playerId","id","input","availability_hours","title","description","status","isClosable","e","target","fetching"],"mappings":"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","sourcesContent":["import {\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightAddon,\n  MetaButton,\n  MetaHeading,\n  Text,\n  useToast,\n} from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdateProfileMutation } from 'graphql/autogen/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useEffect, useState } from 'react';\n\nexport type SetupAvailabilityProps = {\n  availability: string;\n  setAvailability: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const SetupAvailability: React.FC<SetupAvailabilityProps> = ({\n  availability,\n  setAvailability,\n}) => {\n  const { onNextPress, nextButtonLabel } = useSetupFlow();\n\n  const [invalid, setInvalid] = useState(false);\n  const { user } = useUser({ redirectTo: '/' });\n  const toast = useToast();\n\n  useEffect(() => {\n    const value = Number(availability);\n    setInvalid(value < 0 || value > 168);\n  }, [availability]);\n\n  const [updateProfileRes, updateProfile] = useUpdateProfileMutation();\n  const [loading, setLoading] = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    const { error } = await updateProfile({\n      playerId: user.id,\n      input: {\n        availability_hours: Number(availability),\n      },\n    });\n\n    if (error) {\n      toast({\n        title: 'Error',\n        description: 'Unable to update availability. The octo is sad ðŸ˜¢',\n        status: 'error',\n        isClosable: true,\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return (\n    <FlexContainer>\n      <MetaHeading mb={5} textAlign=\"center\">\n        Avail&#xAD;ability\n      </MetaHeading>\n      <Text mb={10}>\n        What is your weekly availability for any kind of freelance work?\n      </Text>\n      <InputGroup borderColor=\"transparent\" mb={10}>\n        <InputLeftElement>\n          <span role=\"img\" aria-label=\"clock\">\n            ðŸ•›\n          </span>\n        </InputLeftElement>\n        <Input\n          background=\"dark\"\n          placeholder=\"40\"\n          type=\"number\"\n          value={availability}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setAvailability(e.target.value)\n          }\n          isInvalid={invalid}\n        />\n        <InputRightAddon background=\"purpleBoxDark\">hr/week</InputRightAddon>\n      </InputGroup>\n\n      <MetaButton\n        onClick={handleNextPress}\n        mt={10}\n        isDisabled={invalid}\n        isLoading={updateProfileRes.fetching || loading}\n        loadingText=\"Saving\"\n      >\n        {nextButtonLabel}\n      </MetaButton>\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}