{"ast":null,"code":"import { TimezoneOptions } from '@raidguild/ds';\n\nconst getOffsetLabel = offset => {\n  const offsets = Math.abs(offset).toFixed(1).split('.');\n  const hrs = offsets[0].toString();\n  const mins = `0${(Number(offsets[1]) * 6).toString()}`.slice(-2);\n  const offsetString = `${hrs}:${mins}`;\n\n  if (offset < 0) {\n    return `(GMT -${offsetString})`;\n  }\n\n  return `(GMT +${offsetString})`;\n};\n\nexport const getPlayerTimeZoneDisplay = playerTimezone => {\n  let tzLabel;\n  let offsetLabel;\n  const timezone = TimezoneOptions.find(t => t.value === playerTimezone);\n\n  if (timezone) {\n    const {\n      abbrev,\n      offset,\n      value\n    } = timezone;\n    tzLabel = value;\n\n    if (abbrev.length < 5) {\n      tzLabel = abbrev;\n      offsetLabel = getOffsetLabel(offset);\n    } else if (offset === 0) {\n      tzLabel = 'GMT';\n      offsetLabel = getOffsetLabel(offset);\n    }\n  }\n\n  return {\n    timeZone: tzLabel,\n    offset: offsetLabel\n  };\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/utils/dateHelpers.ts"],"names":["TimezoneOptions","getOffsetLabel","offset","offsets","Math","abs","toFixed","split","hrs","toString","mins","Number","slice","offsetString","getPlayerTimeZoneDisplay","playerTimezone","tzLabel","offsetLabel","timezone","find","t","value","abbrev","length","timeZone"],"mappings":"AAAA,SAASA,eAAT,QAAgC,aAAhC;;AAOA,MAAMC,cAAc,GAAIC,MAAD,IAA4B;AACjD,QAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASH,MAAT,EAAiBI,OAAjB,CAAyB,CAAzB,EAA4BC,KAA5B,CAAkC,GAAlC,CAAhB;AACA,QAAMC,GAAG,GAAGL,OAAO,CAAC,CAAD,CAAP,CAAWM,QAAX,EAAZ;AACA,QAAMC,IAAI,GAAI,IAAG,CAACC,MAAM,CAACR,OAAO,CAAC,CAAD,CAAR,CAAN,GAAqB,CAAtB,EAAyBM,QAAzB,EAAoC,EAAxC,CAA0CG,KAA1C,CAAgD,CAAC,CAAjD,CAAb;AACA,QAAMC,YAAY,GAAI,GAAEL,GAAI,IAAGE,IAAK,EAApC;;AAEA,MAAIR,MAAM,GAAG,CAAb,EAAgB;AACd,WAAQ,SAAQW,YAAa,GAA7B;AACD;;AACD,SAAQ,SAAQA,YAAa,GAA7B;AACD,CAVD;;AAYA,OAAO,MAAMC,wBAAwB,GACnCC,cADsC,IAElB;AACpB,MAAIC,OAAJ;AACA,MAAIC,WAAJ;AACA,QAAMC,QAAQ,GAAGlB,eAAe,CAACmB,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAYN,cAAxC,CAAjB;;AACA,MAAIG,QAAJ,EAAc;AACZ,UAAM;AAAEI,MAAAA,MAAF;AAAUpB,MAAAA,MAAV;AAAkBmB,MAAAA;AAAlB,QAA4BH,QAAlC;AACAF,IAAAA,OAAO,GAAGK,KAAV;;AACA,QAAIC,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACrBP,MAAAA,OAAO,GAAGM,MAAV;AACAL,MAAAA,WAAW,GAAGhB,cAAc,CAACC,MAAD,CAA5B;AACD,KAHD,MAGO,IAAIA,MAAM,KAAK,CAAf,EAAkB;AACvBc,MAAAA,OAAO,GAAG,KAAV;AACAC,MAAAA,WAAW,GAAGhB,cAAc,CAACC,MAAD,CAA5B;AACD;AACF;;AAED,SAAO;AACLsB,IAAAA,QAAQ,EAAER,OADL;AAELd,IAAAA,MAAM,EAAEe;AAFH,GAAP;AAID,CAtBM","sourcesContent":["import { TimezoneOptions } from '@raidguild/ds';\n\nexport interface TimeZoneDisplay {\n  timeZone?: string;\n  offset?: string;\n}\n\nconst getOffsetLabel = (offset: number): string => {\n  const offsets = Math.abs(offset).toFixed(1).split('.');\n  const hrs = offsets[0].toString();\n  const mins = `0${(Number(offsets[1]) * 6).toString()}`.slice(-2);\n  const offsetString = `${hrs}:${mins}`;\n\n  if (offset < 0) {\n    return `(GMT -${offsetString})`;\n  }\n  return `(GMT +${offsetString})`;\n};\n\nexport const getPlayerTimeZoneDisplay = (\n  playerTimezone: string | undefined | null,\n): TimeZoneDisplay => {\n  let tzLabel;\n  let offsetLabel;\n  const timezone = TimezoneOptions.find((t) => t.value === playerTimezone);\n  if (timezone) {\n    const { abbrev, offset, value } = timezone;\n    tzLabel = value;\n    if (abbrev.length < 5) {\n      tzLabel = abbrev;\n      offsetLabel = getOffsetLabel(offset);\n    } else if (offset === 0) {\n      tzLabel = 'GMT';\n      offsetLabel = getOffsetLabel(offset);\n    }\n  }\n\n  return {\n    timeZone: tzLabel,\n    offset: offsetLabel,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}