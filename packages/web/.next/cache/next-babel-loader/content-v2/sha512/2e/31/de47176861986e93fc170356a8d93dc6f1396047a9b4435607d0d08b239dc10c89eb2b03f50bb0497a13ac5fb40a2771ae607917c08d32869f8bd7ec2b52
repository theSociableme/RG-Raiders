{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/contexts/Web3Context.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { did } from '@raidguild/utils';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { providers } from 'ethers';\nimport { clearToken, clearWalletConnect, getTokenFromStore, setTokenInStore } from 'lib/auth';\nimport React, { createContext, useCallback, useEffect, useRef, useState } from 'react';\nimport Web3Modal from 'web3modal';\nimport { CONFIG } from '../config';\nexport var Web3Context = /*#__PURE__*/createContext({\n  provider: null,\n  connectWeb3: function () {\n    var _connectWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function connectWeb3() {\n      return _connectWeb.apply(this, arguments);\n    }\n\n    return connectWeb3;\n  }(),\n  disconnect: function disconnect() {\n    return undefined;\n  },\n  isConnecting: false,\n  isConnected: false,\n  address: null,\n  authToken: null\n});\nvar providerOptions = {\n  walletconnect: {\n    \"package\": WalletConnectProvider,\n    options: {\n      infuraId: CONFIG.infuraId\n    }\n  }\n};\nvar web3Modal = true && new Web3Modal({\n  network: 'mainnet',\n  cacheProvider: true,\n  providerOptions: providerOptions\n});\n\nfunction getExistingAuth(_x) {\n  return _getExistingAuth.apply(this, arguments);\n}\n\nfunction _getExistingAuth() {\n  _getExistingAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ethersProvider) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = getTokenFromStore();\n\n            if (token) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", null);\n\n          case 3:\n            _context3.prev = 3;\n            _context3.next = 6;\n            return did.verifyToken(token, ethersProvider);\n\n          case 6:\n            return _context3.abrupt(\"return\", token);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](3);\n            clearToken();\n            return _context3.abrupt(\"return\", null);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 9]]);\n  }));\n  return _getExistingAuth.apply(this, arguments);\n}\n\nfunction authenticateWallet(_x2) {\n  return _authenticateWallet.apply(this, arguments);\n}\n\nfunction _authenticateWallet() {\n  _authenticateWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ethersProvider) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return did.createToken(ethersProvider);\n\n          case 2:\n            token = _context4.sent;\n            setTokenInStore(token);\n            return _context4.abrupt(\"return\", token);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _authenticateWallet.apply(this, arguments);\n}\n\nexport var Web3ContextProvider = function Web3ContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      resetUrqlClient = _ref.resetUrqlClient;\n\n  var _useState = useState(null),\n      provider = _useState[0],\n      setProvider = _useState[1];\n\n  var _useState2 = useState(false),\n      isConnected = _useState2[0],\n      setIsConnected = _useState2[1];\n\n  var _useState3 = useState(false),\n      isConnecting = _useState3[0],\n      setIsConnecting = _useState3[1];\n\n  var _useState4 = useState(null),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(null),\n      authToken = _useState5[0],\n      setAuthToken = _useState5[1];\n\n  var calledOnce = useRef(false);\n  var disconnect = useCallback(function () {\n    if (web3Modal === false) return;\n    web3Modal.clearCachedProvider();\n    clearWalletConnect();\n    clearToken();\n    setAuthToken(null);\n    setAddress(null);\n    setProvider(null);\n    setIsConnecting(false);\n    setIsConnected(false);\n    if (resetUrqlClient) resetUrqlClient();\n  }, [resetUrqlClient]);\n  var connectWeb3 = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var web3Provider, ethersProvider, ethAddress, token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(web3Modal === false)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            setIsConnecting(true);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return web3Modal.connect();\n\n          case 6:\n            web3Provider = _context2.sent;\n            ethersProvider = new providers.Web3Provider(web3Provider);\n            _context2.next = 10;\n            return ethersProvider.getSigner().getAddress();\n\n          case 10:\n            ethAddress = _context2.sent;\n            _context2.next = 13;\n            return getExistingAuth(ethersProvider);\n\n          case 13:\n            token = _context2.sent;\n\n            if (token) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.next = 17;\n            return authenticateWallet(ethersProvider);\n\n          case 17:\n            token = _context2.sent;\n\n          case 18:\n            setAddress(ethAddress);\n            setProvider(ethersProvider);\n            setAuthToken(token);\n            setIsConnecting(false);\n            setIsConnected(true);\n            if (resetUrqlClient) resetUrqlClient();\n            _context2.next = 31;\n            break;\n\n          case 26:\n            _context2.prev = 26;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.log(_context2.t0); // eslint-disable-line no-console\n\n            setIsConnecting(false);\n            disconnect();\n\n          case 31:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 26]]);\n  })), [resetUrqlClient, disconnect]);\n  useEffect(function () {\n    if (calledOnce.current) return;\n    calledOnce.current = true;\n    if (web3Modal === false) return;\n\n    if (web3Modal.cachedProvider) {\n      connectWeb3()[\"catch\"](function () {\n        return undefined;\n      });\n    }\n  }, [connectWeb3]);\n  return __jsx(Web3Context.Provider, {\n    value: {\n      provider: provider,\n      connectWeb3: connectWeb3,\n      disconnect: disconnect,\n      isConnected: isConnected,\n      isConnecting: isConnecting,\n      address: address,\n      authToken: authToken\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(Web3ContextProvider, \"jNX95kPz3fc9HYuje8NHWPlrWic=\");\n\n_c = Web3ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Web3ContextProvider\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/contexts/Web3Context.tsx"],"names":["did","WalletConnectProvider","providers","clearToken","clearWalletConnect","getTokenFromStore","setTokenInStore","React","createContext","useCallback","useEffect","useRef","useState","Web3Modal","CONFIG","Web3Context","provider","connectWeb3","disconnect","undefined","isConnecting","isConnected","address","authToken","providerOptions","walletconnect","options","infuraId","web3Modal","network","cacheProvider","getExistingAuth","ethersProvider","token","verifyToken","authenticateWallet","createToken","Web3ContextProvider","children","resetUrqlClient","setProvider","setIsConnected","setIsConnecting","setAddress","setAuthToken","calledOnce","clearCachedProvider","connect","web3Provider","Web3Provider","getSigner","getAddress","ethAddress","console","log","current","cachedProvider"],"mappings":"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","sourcesContent":["import { did } from '@raidguild/utils';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { providers } from 'ethers';\nimport {\n  clearToken,\n  clearWalletConnect,\n  getTokenFromStore,\n  setTokenInStore,\n} from 'lib/auth';\nimport React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport Web3Modal from 'web3modal';\n\nimport { CONFIG } from '../config';\n\nexport type Web3ContextType = {\n  provider: providers.Web3Provider | null;\n  connectWeb3: () => Promise<void>;\n  disconnect: () => void;\n  isConnecting: boolean;\n  isConnected: boolean;\n  address: string | null;\n  authToken: string | null;\n};\n\nexport const Web3Context = createContext<Web3ContextType>({\n  provider: null,\n  connectWeb3: async () => {},\n  disconnect: () => undefined,\n  isConnecting: false,\n  isConnected: false,\n  address: null,\n  authToken: null,\n});\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: CONFIG.infuraId,\n    },\n  },\n};\n\nconst web3Modal =\n  typeof window !== 'undefined' &&\n  new Web3Modal({\n    network: 'mainnet',\n    cacheProvider: true,\n    providerOptions,\n  });\n\nasync function getExistingAuth(\n  ethersProvider: providers.Web3Provider,\n): Promise<string | null> {\n  const token = getTokenFromStore();\n  if (!token) return null;\n\n  try {\n    await did.verifyToken(token, ethersProvider);\n    return token;\n  } catch (e) {\n    clearToken();\n    return null;\n  }\n}\n\nasync function authenticateWallet(\n  ethersProvider: providers.Web3Provider,\n): Promise<string> {\n  const token = await did.createToken(ethersProvider);\n  setTokenInStore(token);\n  return token;\n}\n\ninterface Web3ContextProviderOptions {\n  children: React.ReactElement;\n  resetUrqlClient?: () => void;\n}\n\nexport const Web3ContextProvider: React.FC<Web3ContextProviderOptions> = ({\n  children,\n  resetUrqlClient,\n}) => {\n  const [provider, setProvider] = useState<providers.Web3Provider | null>(null);\n  const [isConnected, setIsConnected] = useState<boolean>(false);\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [address, setAddress] = useState<string | null>(null);\n  const [authToken, setAuthToken] = useState<string | null>(null);\n  const calledOnce = useRef<boolean>(false);\n\n  const disconnect = useCallback(() => {\n    if (web3Modal === false) return;\n\n    web3Modal.clearCachedProvider();\n    clearWalletConnect();\n    clearToken();\n    setAuthToken(null);\n    setAddress(null);\n    setProvider(null);\n    setIsConnecting(false);\n    setIsConnected(false);\n    if (resetUrqlClient) resetUrqlClient();\n  }, [resetUrqlClient]);\n\n  const connectWeb3 = useCallback(async () => {\n    if (web3Modal === false) return;\n    setIsConnecting(true);\n\n    try {\n      const web3Provider = await web3Modal.connect();\n      const ethersProvider = new providers.Web3Provider(web3Provider);\n\n      const ethAddress = await ethersProvider.getSigner().getAddress();\n\n      let token: string | null = await getExistingAuth(ethersProvider);\n      if (!token) {\n        token = await authenticateWallet(ethersProvider);\n      }\n\n      setAddress(ethAddress);\n      setProvider(ethersProvider);\n      setAuthToken(token);\n      setIsConnecting(false);\n      setIsConnected(true);\n      if (resetUrqlClient) resetUrqlClient();\n    } catch (error) {\n      console.log(error); // eslint-disable-line no-console\n      setIsConnecting(false);\n      disconnect();\n    }\n  }, [resetUrqlClient, disconnect]);\n\n  useEffect(() => {\n    if (calledOnce.current) return;\n    calledOnce.current = true;\n\n    if (web3Modal === false) return;\n    if (web3Modal.cachedProvider) {\n      connectWeb3().catch(() => undefined);\n    }\n  }, [connectWeb3]);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        provider,\n        connectWeb3,\n        disconnect,\n        isConnected,\n        isConnecting,\n        address,\n        authToken,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}