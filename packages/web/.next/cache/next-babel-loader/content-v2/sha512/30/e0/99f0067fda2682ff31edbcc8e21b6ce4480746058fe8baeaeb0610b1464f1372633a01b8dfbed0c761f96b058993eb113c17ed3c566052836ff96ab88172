{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupTimeZone.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { MetaButton, MetaHeading, SelectTimeZone, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdateProfileMutation } from 'graphql/autogen/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\nexport var SetupTimeZone = function SetupTimeZone(_ref) {\n  _s();\n\n  var timeZone = _ref.timeZone,\n      setTimeZone = _ref.setTimeZone;\n\n  var _useSetupFlow = useSetupFlow(),\n      onNextPress = _useSetupFlow.onNextPress,\n      nextButtonLabel = _useSetupFlow.nextButtonLabel;\n\n  var _useUser = useUser({\n    redirectTo: '/'\n  }),\n      user = _useUser.user;\n\n  var toast = useToast();\n\n  var _useUpdateProfileMuta = useUpdateProfileMutation(),\n      _useUpdateProfileMuta2 = _slicedToArray(_useUpdateProfileMuta, 2),\n      updateProfileRes = _useUpdateProfileMuta2[0],\n      updateProfile = _useUpdateProfileMuta2[1];\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var handleNextPress = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$updateProfile, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (user) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              setLoading(true);\n              _context.next = 5;\n              return updateProfile({\n                playerId: user.id,\n                input: {\n                  timezone: timeZone\n                }\n              });\n\n            case 5:\n              _yield$updateProfile = _context.sent;\n              error = _yield$updateProfile.error;\n\n              if (!error) {\n                _context.next = 11;\n                break;\n              }\n\n              toast({\n                title: 'Error',\n                description: 'Unable to update time zone. The octo is sad ðŸ˜¢',\n                status: 'error',\n                isClosable: true\n              });\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              onNextPress();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNextPress() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(FlexContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(MetaHeading, {\n    mb: 10,\n    mt: -64,\n    textAlign: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Which time zone are you in?\"), __jsx(FlexContainer, {\n    w: \"100%\",\n    align: \"stretch\",\n    maxW: \"30rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(SelectTimeZone, {\n    value: timeZone,\n    onChange: function onChange(tz) {\n      return setTimeZone(tz.value);\n    },\n    labelStyle: \"abbrev\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), __jsx(MetaButton, {\n    onClick: handleNextPress,\n    mt: 10,\n    isLoading: updateProfileRes.fetching || loading,\n    loadingText: \"Saving\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, nextButtonLabel));\n};\n\n_s(SetupTimeZone, \"IPBby1bFmRGzvTAVFxo6tBICCFo=\", false, function () {\n  return [useSetupFlow, useUser, useToast, useUpdateProfileMutation];\n});\n\n_c = SetupTimeZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetupTimeZone\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupTimeZone.tsx"],"names":["MetaButton","MetaHeading","SelectTimeZone","useToast","FlexContainer","useSetupFlow","useUpdateProfileMutation","useUser","React","useState","SetupTimeZone","timeZone","setTimeZone","onNextPress","nextButtonLabel","redirectTo","user","toast","updateProfileRes","updateProfile","loading","setLoading","handleNextPress","playerId","id","input","timezone","error","title","description","status","isClosable","tz","value","fetching"],"mappings":"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","sourcesContent":["import { MetaButton, MetaHeading, SelectTimeZone, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdateProfileMutation } from 'graphql/autogen/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\n\nexport type SetupTimezoneProps = {\n  timeZone: string;\n  setTimeZone: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const SetupTimeZone: React.FC<SetupTimezoneProps> = ({\n  timeZone,\n  setTimeZone,\n}) => {\n  const { onNextPress, nextButtonLabel } = useSetupFlow();\n  const { user } = useUser({ redirectTo: '/' });\n  const toast = useToast();\n\n  const [updateProfileRes, updateProfile] = useUpdateProfileMutation();\n  const [loading, setLoading] = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    const { error } = await updateProfile({\n      playerId: user.id,\n      input: {\n        timezone: timeZone,\n      },\n    });\n\n    if (error) {\n      toast({\n        title: 'Error',\n        description: 'Unable to update time zone. The octo is sad ðŸ˜¢',\n        status: 'error',\n        isClosable: true,\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return (\n    <FlexContainer>\n      <MetaHeading mb={10} mt={-64} textAlign=\"center\">\n        Which time zone are you in?\n      </MetaHeading>\n      <FlexContainer w=\"100%\" align=\"stretch\" maxW=\"30rem\">\n        <SelectTimeZone\n          value={timeZone}\n          onChange={(tz) => setTimeZone(tz.value)}\n          labelStyle=\"abbrev\"\n        />\n      </FlexContainer>\n      <MetaButton\n        onClick={handleNextPress}\n        mt={10}\n        isLoading={updateProfileRes.fetching || loading}\n        loadingText=\"Saving\"\n      >\n        {nextButtonLabel}\n      </MetaButton>\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}