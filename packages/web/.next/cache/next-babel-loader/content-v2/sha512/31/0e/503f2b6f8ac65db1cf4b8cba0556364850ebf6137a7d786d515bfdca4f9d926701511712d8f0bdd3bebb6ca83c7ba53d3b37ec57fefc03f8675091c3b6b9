{"ast":null,"code":"import { TimezoneOptions } from '@raidguild/ds';\n\nvar getOffsetLabel = function getOffsetLabel(offset) {\n  var offsets = Math.abs(offset).toFixed(1).split('.');\n  var hrs = offsets[0].toString();\n  var mins = \"0\".concat((Number(offsets[1]) * 6).toString()).slice(-2);\n  var offsetString = \"\".concat(hrs, \":\").concat(mins);\n\n  if (offset < 0) {\n    return \"(GMT -\".concat(offsetString, \")\");\n  }\n\n  return \"(GMT +\".concat(offsetString, \")\");\n};\n\nexport var getPlayerTimeZoneDisplay = function getPlayerTimeZoneDisplay(playerTimezone) {\n  var tzLabel;\n  var offsetLabel;\n  var timezone = TimezoneOptions.find(function (t) {\n    return t.value === playerTimezone;\n  });\n\n  if (timezone) {\n    var abbrev = timezone.abbrev,\n        offset = timezone.offset,\n        value = timezone.value;\n    tzLabel = value;\n\n    if (abbrev.length < 5) {\n      tzLabel = abbrev;\n      offsetLabel = getOffsetLabel(offset);\n    } else if (offset === 0) {\n      tzLabel = 'GMT';\n      offsetLabel = getOffsetLabel(offset);\n    }\n  }\n\n  return {\n    timeZone: tzLabel,\n    offset: offsetLabel\n  };\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/utils/dateHelpers.ts"],"names":["TimezoneOptions","getOffsetLabel","offset","offsets","Math","abs","toFixed","split","hrs","toString","mins","Number","slice","offsetString","getPlayerTimeZoneDisplay","playerTimezone","tzLabel","offsetLabel","timezone","find","t","value","abbrev","length","timeZone"],"mappings":"AAAA,SAASA,eAAT,QAAgC,aAAhC;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAA4B;AACjD,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASH,MAAT,EAAiBI,OAAjB,CAAyB,CAAzB,EAA4BC,KAA5B,CAAkC,GAAlC,CAAhB;AACA,MAAMC,GAAG,GAAGL,OAAO,CAAC,CAAD,CAAP,CAAWM,QAAX,EAAZ;AACA,MAAMC,IAAI,GAAG,WAAI,CAACC,MAAM,CAACR,OAAO,CAAC,CAAD,CAAR,CAAN,GAAqB,CAAtB,EAAyBM,QAAzB,EAAJ,EAA0CG,KAA1C,CAAgD,CAAC,CAAjD,CAAb;AACA,MAAMC,YAAY,aAAML,GAAN,cAAaE,IAAb,CAAlB;;AAEA,MAAIR,MAAM,GAAG,CAAb,EAAgB;AACd,2BAAgBW,YAAhB;AACD;;AACD,yBAAgBA,YAAhB;AACD,CAVD;;AAYA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CACtCC,cADsC,EAElB;AACpB,MAAIC,OAAJ;AACA,MAAIC,WAAJ;AACA,MAAMC,QAAQ,GAAGlB,eAAe,CAACmB,IAAhB,CAAqB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,KAAF,KAAYN,cAAnB;AAAA,GAArB,CAAjB;;AACA,MAAIG,QAAJ,EAAc;AAAA,QACJI,MADI,GACsBJ,QADtB,CACJI,MADI;AAAA,QACIpB,MADJ,GACsBgB,QADtB,CACIhB,MADJ;AAAA,QACYmB,KADZ,GACsBH,QADtB,CACYG,KADZ;AAEZL,IAAAA,OAAO,GAAGK,KAAV;;AACA,QAAIC,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACrBP,MAAAA,OAAO,GAAGM,MAAV;AACAL,MAAAA,WAAW,GAAGhB,cAAc,CAACC,MAAD,CAA5B;AACD,KAHD,MAGO,IAAIA,MAAM,KAAK,CAAf,EAAkB;AACvBc,MAAAA,OAAO,GAAG,KAAV;AACAC,MAAAA,WAAW,GAAGhB,cAAc,CAACC,MAAD,CAA5B;AACD;AACF;;AAED,SAAO;AACLsB,IAAAA,QAAQ,EAAER,OADL;AAELd,IAAAA,MAAM,EAAEe;AAFH,GAAP;AAID,CAtBM","sourcesContent":["import { TimezoneOptions } from '@raidguild/ds';\n\nexport interface TimeZoneDisplay {\n  timeZone?: string;\n  offset?: string;\n}\n\nconst getOffsetLabel = (offset: number): string => {\n  const offsets = Math.abs(offset).toFixed(1).split('.');\n  const hrs = offsets[0].toString();\n  const mins = `0${(Number(offsets[1]) * 6).toString()}`.slice(-2);\n  const offsetString = `${hrs}:${mins}`;\n\n  if (offset < 0) {\n    return `(GMT -${offsetString})`;\n  }\n  return `(GMT +${offsetString})`;\n};\n\nexport const getPlayerTimeZoneDisplay = (\n  playerTimezone: string | undefined | null,\n): TimeZoneDisplay => {\n  let tzLabel;\n  let offsetLabel;\n  const timezone = TimezoneOptions.find((t) => t.value === playerTimezone);\n  if (timezone) {\n    const { abbrev, offset, value } = timezone;\n    tzLabel = value;\n    if (abbrev.length < 5) {\n      tzLabel = abbrev;\n      offsetLabel = getOffsetLabel(offset);\n    } else if (offset === 0) {\n      tzLabel = 'GMT';\n      offsetLabel = getOffsetLabel(offset);\n    }\n  }\n\n  return {\n    timeZone: tzLabel,\n    offset: offsetLabel,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}