{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupSkills.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MetaButton, MetaHeading, MetaTheme, SelectSearch, selectStyles, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdatePlayerSkillsMutation } from 'graphql/autogen/types';\nimport { SkillColors } from 'graphql/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\n\nconst styles = _objectSpread(_objectSpread({}, selectStyles), {}, {\n  multiValue: (s, {\n    data\n  }) => _objectSpread(_objectSpread({}, s), {}, {\n    background: SkillColors[data.category],\n    color: MetaTheme.colors.white\n  }),\n  multiValueLabel: (s, {\n    data\n  }) => _objectSpread(_objectSpread({}, s), {}, {\n    background: SkillColors[data.category],\n    color: MetaTheme.colors.white\n  }),\n  groupHeading: (s, {\n    children\n  }) => _objectSpread(_objectSpread(_objectSpread({}, s), selectStyles.groupHeading && selectStyles.groupHeading(s, {\n    children\n  })), {}, {\n    background: SkillColors[children]\n  })\n});\n\nexport const SetupSkills = ({\n  skillChoices,\n  skills,\n  setSkills\n}) => {\n  const {\n    onNextPress,\n    nextButtonLabel\n  } = useSetupFlow();\n  const {\n    user\n  } = useUser({\n    redirectTo: '/'\n  });\n  const toast = useToast();\n  const [updateSkillsRes, updateSkills] = useUpdatePlayerSkillsMutation();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n    setLoading(true);\n    const {\n      error\n    } = await updateSkills({\n      skills: skills.map(s => ({\n        skill_id: s.id\n      }))\n    });\n\n    if (error) {\n      console.warn(error); // eslint-disable-line no-console\n\n      toast({\n        title: 'Error',\n        description: 'Unable to update player skills. The octo is sad ðŸ˜¢',\n        status: 'error',\n        isClosable: true\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return __jsx(FlexContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(MetaHeading, {\n    mb: 10,\n    mt: -64,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"What are your super\\xADpowers?\"), __jsx(FlexContainer, {\n    w: \"100%\",\n    align: \"stretch\",\n    maxW: \"50rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(SelectSearch, {\n    isMulti: true,\n    styles: styles,\n    value: skills,\n    onChange: value => setSkills(value),\n    options: skillChoices,\n    autoFocus: true,\n    closeMenuOnSelect: false,\n    placeholder: \"ADD YOUR SKILLS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), __jsx(MetaButton, {\n    onClick: handleNextPress,\n    mt: 10,\n    isLoading: updateSkillsRes.fetching || loading,\n    loadingText: \"Saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, nextButtonLabel));\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupSkills.tsx"],"names":["MetaButton","MetaHeading","MetaTheme","SelectSearch","selectStyles","useToast","FlexContainer","useSetupFlow","useUpdatePlayerSkillsMutation","SkillColors","useUser","React","useState","styles","multiValue","s","data","background","category","color","colors","white","multiValueLabel","groupHeading","children","SetupSkills","skillChoices","skills","setSkills","onNextPress","nextButtonLabel","user","redirectTo","toast","updateSkillsRes","updateSkills","loading","setLoading","handleNextPress","error","map","skill_id","id","console","warn","title","description","status","isClosable","value","fetching"],"mappings":"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","sourcesContent":["import {\n  MetaButton,\n  MetaHeading,\n  MetaTheme,\n  SelectSearch,\n  selectStyles,\n  useToast,\n} from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport {\n  SkillCategory_Enum,\n  useUpdatePlayerSkillsMutation,\n} from 'graphql/autogen/types';\nimport { SkillColors } from 'graphql/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\nimport { CategoryOption, SkillOption } from 'utils/skillHelpers';\n\nexport type SetupSkillsProps = {\n  skillChoices: Array<CategoryOption>;\n  skills: Array<SkillOption>;\n  setSkills: React.Dispatch<React.SetStateAction<Array<SkillOption>>>;\n};\n\nconst styles: typeof selectStyles = {\n  ...selectStyles,\n  multiValue: (s, { data }) => ({\n    ...s,\n    background: SkillColors[data.category as SkillCategory_Enum],\n    color: MetaTheme.colors.white,\n  }),\n  multiValueLabel: (s, { data }) => ({\n    ...s,\n    background: SkillColors[data.category as SkillCategory_Enum],\n    color: MetaTheme.colors.white,\n  }),\n  groupHeading: (s, { children }) => ({\n    ...s,\n    ...(selectStyles.groupHeading &&\n      selectStyles.groupHeading(s, { children })),\n    background: SkillColors[children as SkillCategory_Enum],\n  }),\n};\n\nexport const SetupSkills: React.FC<SetupSkillsProps> = ({\n  skillChoices,\n  skills,\n  setSkills,\n}) => {\n  const { onNextPress, nextButtonLabel } = useSetupFlow();\n  const { user } = useUser({ redirectTo: '/' });\n  const toast = useToast();\n\n  const [updateSkillsRes, updateSkills] = useUpdatePlayerSkillsMutation();\n  const [loading, setLoading] = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    const { error } = await updateSkills({\n      skills: skills.map((s) => ({ skill_id: s.id })),\n    });\n\n    if (error) {\n      console.warn(error); // eslint-disable-line no-console\n      toast({\n        title: 'Error',\n        description: 'Unable to update player skills. The octo is sad ðŸ˜¢',\n        status: 'error',\n        isClosable: true,\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return (\n    <FlexContainer>\n      <MetaHeading mb={10} mt={-64} textAlign=\"center\">\n        What are your super&#xAD;powers?\n      </MetaHeading>\n      <FlexContainer w=\"100%\" align=\"stretch\" maxW=\"50rem\">\n        <SelectSearch\n          isMulti\n          styles={styles}\n          value={skills}\n          onChange={(value) => setSkills(value as Array<SkillOption>)}\n          options={skillChoices}\n          autoFocus\n          closeMenuOnSelect={false}\n          placeholder=\"ADD YOUR SKILLS\"\n        />\n      </FlexContainer>\n      <MetaButton\n        onClick={handleNextPress}\n        mt={10}\n        isLoading={updateSkillsRes.fetching || loading}\n        loadingText=\"Saving\"\n      >\n        {nextButtonLabel}\n      </MetaButton>\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}