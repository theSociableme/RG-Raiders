{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/quests.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Heading, HStack, LoadingState, MetaButton, Text, Tooltip } from '@raidguild/ds';\nimport { PageContainer } from 'components/Container';\nimport { QuestFilter } from 'components/Quest/QuestFilter';\nimport { QuestList } from 'components/Quest/QuestList';\nimport { HeadComponent } from 'components/Seo';\nimport { getSsrClient } from 'graphql/client';\nimport { getQuests } from 'graphql/getQuests';\nimport { usePSeedBalance } from 'lib/hooks/balances';\nimport { useQuestFilter } from 'lib/hooks/quests';\nimport { useRouter } from 'next/router';\nimport React, { useMemo } from 'react';\nimport { isAllowedToCreateQuest } from 'utils/questHelpers';\nexport const getStaticProps = async () => {\n  const [ssrClient, ssrCache] = getSsrClient(); // This populate the cache server-side\n\n  await getQuests(undefined, ssrClient);\n  return {\n    props: {\n      urqlState: ssrCache.extractData()\n    },\n    revalidate: 1\n  };\n};\n\nconst QuestsPage = () => {\n  const router = useRouter();\n  const {\n    quests,\n    aggregates,\n    fetching,\n    error,\n    queryVariables,\n    setQueryVariable\n  } = useQuestFilter();\n  const {\n    pSeedBalance,\n    fetching: fetchingBalance\n  } = usePSeedBalance();\n  const canCreateQuest = useMemo(() => isAllowedToCreateQuest(pSeedBalance), [pSeedBalance]);\n  return __jsx(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(HeadComponent, {\n    title: \"Metagame's Quests\",\n    description: \"Metagame is a Massive Online Coordination Game! Metagame has some epic quests going on!\",\n    url: \"https://my.metagame.wtf/quests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    w: \"100%\",\n    maxW: \"80rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(HStack, {\n    justify: \"space-between\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Quest explorer\"), __jsx(Tooltip, {\n    label: !canCreateQuest && 'You need to hold at least 100 pSEED to create a quest',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(MetaButton, {\n    fontFamily: \"mono\" // disabled={!canCreateQuest} // if disabled, tooltip doesn't show...\n    ,\n    isLoading: fetchingBalance,\n    onClick: () => canCreateQuest && router.push('/quest/create'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"New Quest\"))), __jsx(Box, {\n    mt: 8,\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(QuestFilter, {\n    aggregates: aggregates,\n    queryVariables: queryVariables,\n    setQueryVariable: setQueryVariable,\n    quests: quests || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    mt: 8,\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, fetching && __jsx(LoadingState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }\n  }), error && __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, `Error: ${error.message}`), quests && !fetching && __jsx(QuestList, {\n    quests: quests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 35\n    }\n  }))));\n};\n\nexport default QuestsPage;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/quests.tsx"],"names":["Box","Heading","HStack","LoadingState","MetaButton","Text","Tooltip","PageContainer","QuestFilter","QuestList","HeadComponent","getSsrClient","getQuests","usePSeedBalance","useQuestFilter","useRouter","React","useMemo","isAllowedToCreateQuest","getStaticProps","ssrClient","ssrCache","undefined","props","urqlState","extractData","revalidate","QuestsPage","router","quests","aggregates","fetching","error","queryVariables","setQueryVariable","pSeedBalance","fetchingBalance","canCreateQuest","push","message"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Heading,\n  HStack,\n  LoadingState,\n  MetaButton,\n  Text,\n  Tooltip,\n} from '@raidguild/ds';\nimport { PageContainer } from 'components/Container';\nimport { QuestFilter } from 'components/Quest/QuestFilter';\nimport { QuestList } from 'components/Quest/QuestList';\nimport { HeadComponent } from 'components/Seo';\nimport { getSsrClient } from 'graphql/client';\nimport { getQuests } from 'graphql/getQuests';\nimport { usePSeedBalance } from 'lib/hooks/balances';\nimport { useQuestFilter } from 'lib/hooks/quests';\nimport { InferGetStaticPropsType } from 'next';\nimport { useRouter } from 'next/router';\nimport React, { useMemo } from 'react';\nimport { isAllowedToCreateQuest } from 'utils/questHelpers';\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>;\n\nexport const getStaticProps = async () => {\n  const [ssrClient, ssrCache] = getSsrClient();\n  // This populate the cache server-side\n  await getQuests(undefined, ssrClient);\n\n  return {\n    props: {\n      urqlState: ssrCache.extractData(),\n    },\n    revalidate: 1,\n  };\n};\n\nconst QuestsPage: React.FC<Props> = () => {\n  const router = useRouter();\n  const {\n    quests,\n    aggregates,\n    fetching,\n    error,\n    queryVariables,\n    setQueryVariable,\n  } = useQuestFilter();\n  const { pSeedBalance, fetching: fetchingBalance } = usePSeedBalance();\n  const canCreateQuest = useMemo(() => isAllowedToCreateQuest(pSeedBalance), [\n    pSeedBalance,\n  ]);\n\n  return (\n    <PageContainer>\n      <HeadComponent\n        title=\"Metagame's Quests\"\n        description=\"Metagame is a Massive Online Coordination Game! Metagame has some epic quests going on!\"\n        url=\"https://my.metagame.wtf/quests\"\n      />\n      <Box w=\"100%\" maxW=\"80rem\">\n        <HStack justify=\"space-between\" w=\"100%\">\n          <Heading>Quest explorer</Heading>\n          <Tooltip\n            label={\n              !canCreateQuest &&\n              'You need to hold at least 100 pSEED to create a quest'\n            }\n          >\n            <MetaButton\n              fontFamily=\"mono\"\n              // disabled={!canCreateQuest} // if disabled, tooltip doesn't show...\n              isLoading={fetchingBalance}\n              onClick={() => canCreateQuest && router.push('/quest/create')}\n            >\n              New Quest\n            </MetaButton>\n          </Tooltip>\n        </HStack>\n        <Box mt={8} w=\"100%\">\n          <QuestFilter\n            aggregates={aggregates}\n            queryVariables={queryVariables}\n            setQueryVariable={setQueryVariable}\n            quests={quests || []}\n          />\n        </Box>\n        <Box mt={8} w=\"100%\">\n          {fetching && <LoadingState />}\n          {error && <Text>{`Error: ${error.message}`}</Text>}\n          {quests && !fetching && <QuestList quests={quests} />}\n        </Box>\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default QuestsPage;\n"]},"metadata":{},"sourceType":"module"}