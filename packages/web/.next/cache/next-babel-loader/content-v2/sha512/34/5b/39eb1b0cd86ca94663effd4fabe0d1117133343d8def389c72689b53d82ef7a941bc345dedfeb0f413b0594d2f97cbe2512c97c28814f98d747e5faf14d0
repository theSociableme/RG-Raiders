{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupUsername.tsx\";\nvar __jsx = React.createElement;\nimport { Input, MetaButton, MetaHeading, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdatePlayerUsernameMutation } from 'graphql/autogen/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\nexport const SetupUsername = ({\n  username,\n  setUsername\n}) => {\n  const {\n    onNextPress,\n    nextButtonLabel\n  } = useSetupFlow();\n  const {\n    user\n  } = useUser({\n    redirectTo: '/'\n  });\n  const toast = useToast();\n  const [updateUsernameRes, updateUsername] = useUpdatePlayerUsernameMutation();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n    setLoading(true);\n    const {\n      error\n    } = await updateUsername({\n      playerId: user.id,\n      username: username !== null && username !== void 0 ? username : ''\n    });\n\n    if (error) {\n      let errorDetail = 'The octo is sad ðŸ˜¢';\n\n      if (error.message.includes('Uniqueness violation')) {\n        errorDetail = 'This username is already taken ðŸ˜¢';\n      } else if (error.message.includes('username_is_valid')) {\n        errorDetail = 'A username can only contain lowercase letters, numbers, and dashes.';\n      }\n\n      toast({\n        title: 'Error',\n        description: `Unable to update Player Username. ${errorDetail}`,\n        status: 'error',\n        isClosable: true\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return __jsx(FlexContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(MetaHeading, {\n    mb: 10,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"What username would you like?\"), __jsx(Input, {\n    background: \"dark\",\n    placeholder: \"USERNAME\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    w: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(MetaButton, {\n    onClick: handleNextPress,\n    mt: 10,\n    isLoading: updateUsernameRes.fetching || loading,\n    loadingText: \"Saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, nextButtonLabel));\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Setup/SetupUsername.tsx"],"names":["Input","MetaButton","MetaHeading","useToast","FlexContainer","useSetupFlow","useUpdatePlayerUsernameMutation","useUser","React","useState","SetupUsername","username","setUsername","onNextPress","nextButtonLabel","user","redirectTo","toast","updateUsernameRes","updateUsername","loading","setLoading","handleNextPress","error","playerId","id","errorDetail","message","includes","title","description","status","isClosable","e","target","value","fetching"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,QAAzC,QAAyD,aAAzD;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,+BAAT,QAAgD,uBAAhD;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAOA,OAAO,MAAMC,aAA2C,GAAG,CAAC;AAC1DC,EAAAA,QAD0D;AAE1DC,EAAAA;AAF0D,CAAD,KAGrD;AACJ,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCT,YAAY,EAArD;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWR,OAAO,CAAC;AAAES,IAAAA,UAAU,EAAE;AAAd,GAAD,CAAxB;AACA,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AAEA,QAAM,CAACe,iBAAD,EAAoBC,cAApB,IAAsCb,+BAA+B,EAA3E;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMa,eAAe,GAAG,YAAY;AAClC,QAAI,CAACP,IAAL,EAAW;AAEXM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAY,MAAMJ,cAAc,CAAC;AACrCK,MAAAA,QAAQ,EAAET,IAAI,CAACU,EADsB;AAErCd,MAAAA,QAAQ,EAAEA,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAc;AAFe,KAAD,CAAtC;;AAKA,QAAIY,KAAJ,EAAW;AACT,UAAIG,WAAW,GAAG,oBAAlB;;AACA,UAAIH,KAAK,CAACI,OAAN,CAAcC,QAAd,CAAuB,sBAAvB,CAAJ,EAAoD;AAClDF,QAAAA,WAAW,GAAG,mCAAd;AACD,OAFD,MAEO,IAAIH,KAAK,CAACI,OAAN,CAAcC,QAAd,CAAuB,mBAAvB,CAAJ,EAAiD;AACtDF,QAAAA,WAAW,GACT,qEADF;AAED;;AACDT,MAAAA,KAAK,CAAC;AACJY,QAAAA,KAAK,EAAE,OADH;AAEJC,QAAAA,WAAW,EAAG,qCAAoCJ,WAAY,EAF1D;AAGJK,QAAAA,MAAM,EAAE,OAHJ;AAIJC,QAAAA,UAAU,EAAE;AAJR,OAAD,CAAL;AAMAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AAEDR,IAAAA,WAAW;AACZ,GA5BD;;AA8BA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAIE,MAAC,KAAD;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEF,QAHT;AAIE,IAAA,QAAQ,EAAGsB,CAAD,IACRrB,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CALf;AAOE,IAAA,CAAC,EAAC,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAcE,MAAC,UAAD;AACE,IAAA,OAAO,EAAEb,eADX;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,SAAS,EAAEJ,iBAAiB,CAACkB,QAAlB,IAA8BhB,OAH3C;AAIE,IAAA,WAAW,EAAC,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,eANH,CAdF,CADF;AAyBD,CAlEM","sourcesContent":["import { Input, MetaButton, MetaHeading, useToast } from '@raidguild/ds';\nimport { FlexContainer } from 'components/Container';\nimport { useSetupFlow } from 'contexts/SetupContext';\nimport { useUpdatePlayerUsernameMutation } from 'graphql/autogen/types';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\n\nexport type SetupUsernameProps = {\n  username: string | undefined;\n  setUsername: React.Dispatch<React.SetStateAction<string | undefined>>;\n};\n\nexport const SetupUsername: React.FC<SetupUsernameProps> = ({\n  username,\n  setUsername,\n}) => {\n  const { onNextPress, nextButtonLabel } = useSetupFlow();\n  const { user } = useUser({ redirectTo: '/' });\n  const toast = useToast();\n\n  const [updateUsernameRes, updateUsername] = useUpdatePlayerUsernameMutation();\n  const [loading, setLoading] = useState(false);\n\n  const handleNextPress = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    const { error } = await updateUsername({\n      playerId: user.id,\n      username: username ?? '',\n    });\n\n    if (error) {\n      let errorDetail = 'The octo is sad ðŸ˜¢';\n      if (error.message.includes('Uniqueness violation')) {\n        errorDetail = 'This username is already taken ðŸ˜¢';\n      } else if (error.message.includes('username_is_valid')) {\n        errorDetail =\n          'A username can only contain lowercase letters, numbers, and dashes.';\n      }\n      toast({\n        title: 'Error',\n        description: `Unable to update Player Username. ${errorDetail}`,\n        status: 'error',\n        isClosable: true,\n      });\n      setLoading(false);\n      return;\n    }\n\n    onNextPress();\n  };\n\n  return (\n    <FlexContainer>\n      <MetaHeading mb={10} textAlign=\"center\">\n        What username would you like?\n      </MetaHeading>\n      <Input\n        background=\"dark\"\n        placeholder=\"USERNAME\"\n        value={username}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setUsername(e.target.value)\n        }\n        w=\"auto\"\n      />\n\n      <MetaButton\n        onClick={handleNextPress}\n        mt={10}\n        isLoading={updateUsernameRes.fetching || loading}\n        loadingText=\"Saving\"\n      >\n        {nextButtonLabel}\n      </MetaButton>\n    </FlexContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}