{"ast":null,"code":"import _slicedToArray from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/PlayerContacts.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { BrightIdIcon, Button, Tooltip, Wrap, WrapItem } from '@raidguild/ds';\nimport { useBrightIdStatus } from 'lib/hooks/brightId';\nimport { useCopyToClipboard } from 'lib/hooks/useCopyToClipboard';\nimport React from 'react';\nimport { FaEthereum, FaGithub, FaTwitter } from 'react-icons/fa';\nimport { formatAddress } from 'utils/playerHelpers';\nexport var PlayerContacts = function PlayerContacts(_ref) {\n  _s();\n\n  var player = _ref.player,\n      _ref$disableBrightId = _ref.disableBrightId,\n      disableBrightId = _ref$disableBrightId === void 0 ? false : _ref$disableBrightId;\n\n  var _useBrightIdStatus = useBrightIdStatus({\n    player: player\n  }),\n      verified = _useBrightIdStatus.verified;\n\n  var _useCopyToClipboard = useCopyToClipboard(),\n      _useCopyToClipboard2 = _slicedToArray(_useCopyToClipboard, 2),\n      copied = _useCopyToClipboard2[0],\n      handleCopy = _useCopyToClipboard2[1];\n\n  return __jsx(Wrap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, player.Accounts.map(function (acc) {\n    if (acc.type === 'TWITTER') {\n      var link = \"https://twitter.com/\".concat(acc.identifier);\n      return __jsx(WrapItem, {\n        key: link,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        as: \"a\",\n        href: link,\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        size: \"xs\",\n        colorScheme: \"twitter\",\n        leftIcon: __jsx(FaTwitter, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 27\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, acc.identifier));\n    }\n\n    if (acc.type === 'GITHUB') {\n      var _link = \"https://github.com/\".concat(acc.identifier);\n\n      return __jsx(WrapItem, {\n        key: _link,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        as: \"a\",\n        href: _link,\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        size: \"xs\",\n        colorScheme: \"blackAlpha\",\n        backgroundColor: \"black\",\n        leftIcon: __jsx(FaGithub, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 27\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, acc.identifier));\n    }\n\n    return null;\n  }), player.ethereum_address ? __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    label: copied ? 'Copied!' : 'Copy to clipboard',\n    closeOnClick: false,\n    hasArrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: function onClick(evt) {\n      evt.preventDefault();\n      return player.ethereum_address ? handleCopy(player.ethereum_address.toLowerCase()) : undefined;\n    },\n    size: \"xs\",\n    colorScheme: \"blackAlpha\",\n    leftIcon: __jsx(FaEthereum, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, formatAddress(player.ethereum_address)))) : null, verified && !disableBrightId ? __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    label: \"Verified on BrightID\",\n    closeOnClick: false,\n    hasArrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"xs\",\n    colorScheme: \"brightIdOrange\",\n    leftIcon: __jsx(BrightIdIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Verified\"))) : null);\n};\n\n_s(PlayerContacts, \"5oAoWQz4Gy4g8MDzELAPnaqdFdY=\", false, function () {\n  return [useBrightIdStatus, useCopyToClipboard];\n});\n\n_c = PlayerContacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContacts\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Player/PlayerContacts.tsx"],"names":["BrightIdIcon","Button","Tooltip","Wrap","WrapItem","useBrightIdStatus","useCopyToClipboard","React","FaEthereum","FaGithub","FaTwitter","formatAddress","PlayerContacts","player","disableBrightId","verified","copied","handleCopy","Accounts","map","acc","type","link","identifier","ethereum_address","evt","preventDefault","toLowerCase","undefined"],"mappings":"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","sourcesContent":["import { BrightIdIcon, Button, Tooltip, Wrap, WrapItem } from '@raidguild/ds';\nimport { PlayerFragmentFragment } from 'graphql/autogen/types';\nimport { useBrightIdStatus } from 'lib/hooks/brightId';\nimport { useCopyToClipboard } from 'lib/hooks/useCopyToClipboard';\nimport React from 'react';\nimport { FaEthereum, FaGithub, FaTwitter } from 'react-icons/fa';\nimport { formatAddress } from 'utils/playerHelpers';\n\ntype Props = {\n  player: PlayerFragmentFragment;\n  disableBrightId?: boolean;\n};\n\nexport const PlayerContacts: React.FC<Props> = ({\n  player,\n  disableBrightId = false,\n}) => {\n  const { verified } = useBrightIdStatus({ player });\n  const [copied, handleCopy] = useCopyToClipboard();\n  return (\n    <Wrap>\n      {player.Accounts.map((acc) => {\n        if (acc.type === 'TWITTER') {\n          const link = `https://twitter.com/${acc.identifier}`;\n          return (\n            <WrapItem key={link}>\n              <Button\n                as=\"a\"\n                href={link}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                size=\"xs\"\n                colorScheme=\"twitter\"\n                leftIcon={<FaTwitter />}\n              >\n                {acc.identifier}\n              </Button>\n            </WrapItem>\n          );\n        }\n        if (acc.type === 'GITHUB') {\n          const link = `https://github.com/${acc.identifier}`;\n          return (\n            <WrapItem key={link}>\n              <Button\n                as=\"a\"\n                href={link}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                size=\"xs\"\n                colorScheme=\"blackAlpha\"\n                backgroundColor=\"black\"\n                leftIcon={<FaGithub />}\n              >\n                {acc.identifier}\n              </Button>\n            </WrapItem>\n          );\n        }\n        return null;\n      })}\n      {player.ethereum_address ? (\n        <WrapItem>\n          <Tooltip\n            label={copied ? 'Copied!' : 'Copy to clipboard'}\n            closeOnClick={false}\n            hasArrow\n          >\n            <Button\n              onClick={(evt) => {\n                evt.preventDefault();\n                return player.ethereum_address\n                  ? handleCopy(player.ethereum_address.toLowerCase())\n                  : undefined;\n              }}\n              size=\"xs\"\n              colorScheme=\"blackAlpha\"\n              leftIcon={<FaEthereum />}\n            >\n              {formatAddress(player.ethereum_address)}\n            </Button>\n          </Tooltip>\n        </WrapItem>\n      ) : null}\n      {verified && !disableBrightId ? (\n        <WrapItem>\n          <Tooltip label=\"Verified on BrightID\" closeOnClick={false} hasArrow>\n            <Button\n              size=\"xs\"\n              colorScheme=\"brightIdOrange\"\n              leftIcon={<BrightIdIcon />}\n            >\n              Verified\n            </Button>\n          </Tooltip>\n        </WrapItem>\n      ) : null}\n    </Wrap>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}