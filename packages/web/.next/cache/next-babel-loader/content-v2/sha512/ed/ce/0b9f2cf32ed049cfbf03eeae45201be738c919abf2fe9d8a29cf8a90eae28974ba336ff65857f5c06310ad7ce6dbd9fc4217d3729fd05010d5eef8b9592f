{"ast":null,"code":"import _defineProperty from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Skills.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MetaTag, MetaTheme, SelectSearch, selectStyles, Tooltip, Wrap, WrapItem } from '@raidguild/ds';\nimport { SkillColors } from 'graphql/types';\nimport React from 'react';\nexport var SkillsSelect = function SkillsSelect(_ref) {\n  var skillChoices = _ref.skillChoices,\n      skills = _ref.skills,\n      setSkills = _ref.setSkills,\n      placeHolder = _ref.placeHolder,\n      id = _ref.id;\n\n  var styles = _objectSpread(_objectSpread({}, selectStyles), {}, {\n    multiValue: function multiValue(s, _ref2) {\n      var data = _ref2.data;\n      return _objectSpread(_objectSpread({}, s), {}, {\n        background: SkillColors[data.category],\n        color: MetaTheme.colors.white\n      });\n    },\n    multiValueLabel: function multiValueLabel(s, _ref3) {\n      var data = _ref3.data;\n      return _objectSpread(_objectSpread({}, s), {}, {\n        background: SkillColors[data.category],\n        color: MetaTheme.colors.white\n      });\n    },\n    groupHeading: function groupHeading(s, _ref4) {\n      var children = _ref4.children;\n      return _objectSpread(_objectSpread(_objectSpread({}, s), selectStyles.groupHeading && selectStyles.groupHeading(s, {\n        children: children\n      })), {}, {\n        background: SkillColors[children]\n      });\n    }\n  });\n\n  return __jsx(SelectSearch, {\n    isMulti: true,\n    styles: styles,\n    value: skills,\n    onChange: function onChange(value) {\n      return setSkills(value);\n    },\n    options: skillChoices,\n    autoFocus: true,\n    closeMenuOnSelect: false,\n    placeholder: placeHolder,\n    id: \"skills-select-container-\".concat(id || ''),\n    inputId: \"skills-select-input-\".concat(id || ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  });\n};\n_c = SkillsSelect;\nexport var SkillsTags = function SkillsTags(_ref5) {\n  var _ref5$maxSkills = _ref5.maxSkills,\n      maxSkills = _ref5$maxSkills === void 0 ? 4 : _ref5$maxSkills,\n      skills = _ref5.skills;\n  return __jsx(Wrap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, skills.slice(0, maxSkills).map(function (skill) {\n    return __jsx(WrapItem, {\n      key: skill.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, __jsx(Tooltip, {\n      label: skill.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, __jsx(MetaTag, {\n      size: \"md\",\n      fontWeight: \"normal\",\n      backgroundColor: SkillColors[skill.category],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, skill.name)));\n  }), skills.length > maxSkills && __jsx(WrapItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(MetaTag, {\n    size: \"md\",\n    fontWeight: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"+\".concat(skills.length - maxSkills))));\n};\n_c2 = SkillsTags;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SkillsSelect\");\n$RefreshReg$(_c2, \"SkillsTags\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/components/Skills.tsx"],"names":["MetaTag","MetaTheme","SelectSearch","selectStyles","Tooltip","Wrap","WrapItem","SkillColors","React","SkillsSelect","skillChoices","skills","setSkills","placeHolder","id","styles","multiValue","s","data","background","category","color","colors","white","multiValueLabel","groupHeading","children","value","SkillsTags","maxSkills","slice","map","skill","name","length"],"mappings":"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","sourcesContent":["import {\n  MetaTag,\n  MetaTheme,\n  SelectSearch,\n  selectStyles,\n  Tooltip,\n  Wrap,\n  WrapItem,\n} from '@raidguild/ds';\nimport { Skill, SkillCategory_Enum } from 'graphql/autogen/types';\nimport { SkillColors } from 'graphql/types';\nimport React from 'react';\nimport { CategoryOption, SkillOption } from 'utils/skillHelpers';\n\nexport type SetupSkillsProps = {\n  skillChoices: Array<CategoryOption>;\n  skills: Array<SkillOption>;\n  setSkills: React.Dispatch<React.SetStateAction<Array<SkillOption>>>;\n  placeHolder: string;\n  id?: string;\n};\n\nexport const SkillsSelect: React.FC<SetupSkillsProps> = ({\n  skillChoices,\n  skills,\n  setSkills,\n  placeHolder,\n  id,\n}) => {\n  const styles: typeof selectStyles = {\n    ...selectStyles,\n    multiValue: (s, { data }) => ({\n      ...s,\n      background: SkillColors[data.category as SkillCategory_Enum],\n      color: MetaTheme.colors.white,\n    }),\n    multiValueLabel: (s, { data }) => ({\n      ...s,\n      background: SkillColors[data.category as SkillCategory_Enum],\n      color: MetaTheme.colors.white,\n    }),\n    groupHeading: (s, { children }) => ({\n      ...s,\n      ...(selectStyles.groupHeading &&\n        selectStyles.groupHeading(s, { children })),\n      background: SkillColors[children as SkillCategory_Enum],\n    }),\n  };\n\n  return (\n    <SelectSearch\n      isMulti\n      styles={styles}\n      value={skills}\n      onChange={(value) => setSkills(value as Array<SkillOption>)}\n      options={skillChoices}\n      autoFocus\n      closeMenuOnSelect={false}\n      placeholder={placeHolder}\n      id={`skills-select-container-${id || ''}`}\n      inputId={`skills-select-input-${id || ''}`}\n    />\n  );\n};\n\ninterface SkillsProps {\n  skills: Skill[];\n  maxSkills?: number;\n}\nexport const SkillsTags: React.FC<SkillsProps> = ({\n  maxSkills = 4,\n  skills,\n}) => (\n  <Wrap>\n    {skills.slice(0, maxSkills).map((skill) => (\n      <WrapItem key={skill.id}>\n        <Tooltip label={skill.category}>\n          <MetaTag\n            size=\"md\"\n            fontWeight=\"normal\"\n            backgroundColor={SkillColors[skill.category]}\n          >\n            {skill.name}\n          </MetaTag>\n        </Tooltip>\n      </WrapItem>\n    ))}\n    {skills.length > maxSkills && (\n      <WrapItem>\n        <MetaTag size=\"md\" fontWeight=\"normal\">\n          {`+${skills.length - maxSkills}`}\n        </MetaTag>\n      </WrapItem>\n    )}\n  </Wrap>\n);\n"]},"metadata":{},"sourceType":"module"}